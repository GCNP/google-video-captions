


*TC 00:00:01;14  
Я хотел рассказать вам
немного о 

*TC 00:00:03;16
API языков 
Google Apex 

*TC 00:00:06;17
Я развлекался с небольшой
программой-закладкой, которую 

*TC 00:00:11;00
можно использовать, 
скажем,  

*TC 00:00:12;18
глядя на мой
Twitter.

*TC 00:00:14;03
У нас здесь какая-то странная
штука на другом языке.

*TC 00:00:16;16
Здесь что-то
по-французски, а я 

*TC 00:00:18;03
не имею представления,
что это значит. 

*TC 00:00:20;08
Я могу просто взять
и выбрать это.

*TC 00:00:21;25
Нажать translate,
оно обработается, 

*TC 00:00:23;26
и я получу свой
перевод.

*TC 00:00:26;19
Это будет двигаться.

*TC 00:00:29;18
То же самое, например,
если я болею за Реал, 

*TC 00:00:31;27
смотрю футбол и 
хочу знать, что сказал Кальдерон.

*TC 00:00:36;22
Вперед.

*TC 00:00:38;13
Та-дам! Оно обработается
и расскажет нам

*TC 00:00:41;02
Радостные моменты для всех.

*TC 00:00:43;02
Конечно, 

*TC 00:00:44;26
то, что мы тут получаем,
не будет

*TC 00:00:46;22
идеальным переводом.
Это довольно трудно
сделать.

*TC 00:00:50;20
Но оно дает мне 
достаточно информации.

*TC 00:00:53;23
Например, я
пытался

*TC 00:00:54;28
разобраться с кодом
панели, чтобы вставить это в

*TC 00:00:58;24
исключение строки, когда
собирал его в виде 

*TC 00:01:01;28
прототипа виджета, 

*TC 00:01:02;26
и я просто хотел
знать, 
 
*TC 00:01:04;01
что об этом 
думает народ, 

*TC 00:01:05;20
а ответы
и все такое 

*TC 00:01:06;24
были на 
немецком сайте. Я

*TC 00:01:08;22
опять могу поступить
так же, сделать

*TC 00:01:10;15
перевод,

*TC 00:01:11;25 
который даст мне
достаточно информации, 

*TC 00:01:13;19
чтобы я знал, что они
примерно говорят, 

*TC 00:01:15;18
пусть даже
перевод 

*TC 00:01:19;02
не идеальный.

*TC 00:01:22;02
Эту программку-закладку
я сделал буквально 
за пару минут,

*TC 00:01:25;26
основной код – 
вот этот фрагмент, 

*TC 00:01:29;00
он делает
сам перевод.

*TC 00:01:30;04
Я это делаю так, загружаю
API языков и

*TC 00:01:34;21
даю ему кое-какие
сведения о том,  

*TC 00:01:37;06
что мне нужно на выходе.

*TC 00:01:39;10
Потом я делаю 
определение, чтобы 

*TC 00:01:41;23
система попыталась 
автоматически определить 

*TC 00:01:43;20
испанский ли это, или
итальянский, 

*TC 00:01:45;14
может, немецкий, а
когда 

*TC 00:01:48;16
что-то действительно
получается, 

*TC 00:01:49;24
если она думает, что
что-то есть, 

*TC 00:01:51;00
она начнет
обработку 

*TC 00:01:51;22
и сделает перевод. 

*TC 00:01:53;21
Теперь она попробует
сделать перевод 

*TC 00:01:56;06
и 

*TC 00:01:58;06
если что-то получается, 

*TC 00:01:59;11
она возьмет и 
переведет все это, 

*TC 00:02:01;20
или скажет,
что ничего

*TC 00:02:03;09
не получается.

*TC 00:02:05;14
Таким образом, все,
что я по сути делаю, 

*TC 00:02:08;05
я делаю логику
отображения, то есть 
этот вызов,

*TC 00:02:11;24
который мы отправляем,
это маленькое окошко, 

*TC 00:02:13;12
используя новое
окно прототипа 
пользовательского интерфейса,

*TC 00:02:16;21
чтобы установить
информацию.

*TC 00:02:18;14
Всякие там заголовки
и нижние части окна,

*TC 00:02:19;21
иногда оно может 
почему-то не загрузиться, 

*TC 00:02:21;25
потому что в таком
приложении-закладке 

*TC 00:02:24;00
иногда бывают 
конфликты 

*TC 00:02:25;13
и всякое
такое. 

*TC 00:02:27;15
Просто разблокируйте
как-нибудь попроще.

*TC 00:02:31;04
А вот, собственно, весь
страшный и ужасный код,  

*TC 00:02:34;16
который надо загружать
в файлы из программы-закладки.

*TC 00:02:36;24
Поэтому мы возьмем
и загрузим главный 
JavaScript

*TC 00:02:39;28
и CSS для этого
маленького виджета.

*TC 00:02:43;20
Наконец, чтобы 
все заработало, 

*TC 00:02:46;05
вот исходный вызов для
загрузки API Google.

*TC 00:02:50;14
Заметьте, что мы 
добавили callback-функцию.

*TC 00:02:53;12
Она довольно новая,
всего несколько месяцев, 

*TC 00:02:57;06 
и это новый способ
сгруппировать динамический
доступ, 

*TC 00:03:00;28
чтобы произошла
эта цепочка 

*TC 00:03:03;14
и произошел вызов
это загруженного API.

*TC 00:03:07;09
Если у нас этого нет,
просто вызовем вручную.

*TC 00:03:09;28
Когда все это
заработает, 

*TC 00:03:11;24
оно отправится к
в службу, 

*TC 00:03:13;15
которая начнет
делать свое дело.

*TC 00:03:15;16
Тут у нас опять есть еще
callback-функция,

*TC 00:03:18;11
то есть у нас что-то вроде
циклических callback-функций, 

*TC 00:03:20;19
которые дают нам то, что
нам нужно.

*TC 00:03:23;14
Еще интересная штука, 
которую 

*TC 00:03:26;23
я тут на днях заметил,
есть такой клиент IRC Mibbit, 

*TC 00:03:30;10
он чисто онлайновый,
 
*TC 00:03:31;24
если мы зайдем в чат, где
все разговаривают, 

*TC 00:03:36;08
мы увидим этот новый перевод.

*TC 00:03:42;04
Мы можем, положим, взять
английский и перевести 

*TC 00:03:48;24
его на французский, как если
бы народ начал говорить на нем.

*TC 00:03:53;15
Вот так. 

*TC 00:03:54;02
Видите, он автоматически сделал
перевод на французский.

*TC 00:03:56;27
Он взял английский и 
перевел его на французский. 

*TC 00:04:00;14
Я мог бы переводить и себя,
например, я пришел в чат,

*TC 00:04:05;12
но не говорю по-английски,
я возьму и буду 

*TC 00:04:08;09
набирать на своем родном
языке, а он переведет это

01:04:10;16
на английский.

*TC 00:04:13;06
Мне кажется, это очень
здорово.

*TC 00:04:16;19
Наконец, последний кусочек
интересного. 

*TC 00:04:18;25
Если пойти в документацию,
можно найти там недавно
добавленную 

*TC 00:04:22;16
часть про Flash и другие
среды, кроме JavaScript.

*TC 00:04:26;06
Это значит, что теперь
можно 

*TC 00:04:27;28
делать переводы
через сервер. 

*TC 00:04:30;27
Теперь не нужно ковыряться
во всем этом AJAX, 

*TC 00:04:34;06
можно просто сделать
небольшой вызов JSON,

*TC 00:04:37;14
который всегда можно
скопировать, чтобы сделать
перевод.

*TC 00:04:40;29
Это можно сделать либо
с технологией со стороны службы, 


*TC 00:04:44;08
либо через что-нибудь,
понимающее HTTP и JSON.

*TC 00:04:48;06
Я надеюсь, вы придумаете
что-нибудь увлекательное 

*TC 00:04:51;07
с этим новым API языков.





