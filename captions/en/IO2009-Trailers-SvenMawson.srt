1
00:00:04,033 --> 00:00:06,200
Mawson: Hi, I'm Sven Mawson

2
00:00:06,200 --> 00:00:08,067
and I'll be speaking
at Google I/O this year.

3
00:00:08,067 --> 00:00:11,067
I'll be discussing the evolution
of the Google data protocol

4
00:00:11,067 --> 00:00:12,834
and some new features
we're introducing

5
00:00:12,834 --> 00:00:15,334
to make it easier to build
efficient applications.

6
00:00:15,334 --> 00:00:18,267
The Google data APIs
are a great way to get data

7
00:00:18,267 --> 00:00:19,701
into and out of Google
applications,

8
00:00:19,701 --> 00:00:22,267
but they aren't very efficient
at the protocol level.

9
00:00:22,267 --> 00:00:24,534
This makes them less useful
than we'd like them to be

10
00:00:24,534 --> 00:00:27,701
for latency-sensitive tasks,
such as driving an AJAX UI.

11
00:00:27,701 --> 00:00:30,300
So we're introducing
some new ways to reduce

12
00:00:30,300 --> 00:00:31,934
both the bandwidth
and the latency

13
00:00:31,934 --> 00:00:33,367
when communicating
with Google services

14
00:00:33,367 --> 00:00:34,801
through the data protocol.

15
00:00:34,801 --> 00:00:36,200
And we're making
the programming model

16
00:00:36,200 --> 00:00:37,567
easier while we're at it.

17
00:00:37,567 --> 00:00:39,601
One of the new features
we're introducing

18
00:00:39,601 --> 00:00:42,334
is a new JSON format
that is smaller, faster,

19
00:00:42,334 --> 00:00:44,601
and simpler to use
than the existing format.

20
00:00:44,601 --> 00:00:47,968
This new format uses
many fewer JavaScript objects

21
00:00:47,968 --> 00:00:49,701
and much less room on the wire

22
00:00:49,701 --> 00:00:51,834
to significantly reduce
the amount of bandwidth

23
00:00:51,834 --> 00:00:53,501
and latency used
by the protocol.

24
00:00:53,501 --> 00:00:55,434
As we see in this example,

25
00:00:55,434 --> 00:00:58,767
in a feed of 500 photos
from the Picasa web albums API,

26
00:00:58,767 --> 00:01:04,267
the existing JSON format
takes 770 kilobytes of space.

27
00:01:04,267 --> 00:01:06,067
Using the new JSON format,

28
00:01:06,067 --> 00:01:10,300
these feed only takes
385 kilobytes of space.

29
00:01:10,300 --> 00:01:14,634
And using the new JSON format
plus partial gets,

30
00:01:14,634 --> 00:01:15,901
another feature we'll be
introducing

31
00:01:15,901 --> 00:01:17,434
at Google I/O this year,

32
00:01:17,434 --> 00:01:19,234
it only takes 70 kilobytes
of space.

33
00:01:19,234 --> 00:01:22,100
That's just 1/10 the size
of the original feed.

34
00:01:22,100 --> 00:01:24,501
So I hope to see you
at Google I/O in San Francisco

35
00:01:24,501 --> 00:01:26,033
and I look forward
to seeing you there.

