1
00:00:00,968 --> 00:00:01,701
Papakipos:
So you've probably seen

2
00:00:01,701 --> 00:00:03,701
graphics like this before
in games

3
00:00:03,701 --> 00:00:05,133
or in other applications.

4
00:00:05,133 --> 00:00:06,601
What you haven't seen
is in--

5
00:00:06,601 --> 00:00:10,200
seen this running intrinsically
in the web browser.

6
00:00:13,868 --> 00:00:16,200
So the technology
clearly has great potential.

7
00:00:16,200 --> 00:00:18,200
Let me walk you through some
of the interesting aspects

8
00:00:18,200 --> 00:00:22,033
of--of this demo,
uh, to show you more about it.

9
00:00:22,033 --> 00:00:24,634
So first off,
notice the visual quality here.

10
00:00:24,634 --> 00:00:26,868
We have very high resolution
texture maps

11
00:00:26,868 --> 00:00:29,434
on the surfaces of the rocks,
of the trees,

12
00:00:29,434 --> 00:00:31,767
of the bottom,
uh, of the--the sea floor

13
00:00:31,767 --> 00:00:35,033
under the water,
and of the sky itself.

14
00:00:35,033 --> 00:00:36,701
We also have
what are called bump maps.

15
00:00:36,701 --> 00:00:38,868
So we have,
um, detailed textures

16
00:00:38,868 --> 00:00:41,868
on the surfaces that describe
the local surface texture--

17
00:00:41,868 --> 00:00:43,567
the physical shape
of the surface--

18
00:00:43,567 --> 00:00:45,534
which gives us
very realistic lighting

19
00:00:45,534 --> 00:00:47,133
as the light
bounces off the scene

20
00:00:47,133 --> 00:00:49,434
and--and,
uh, hits the viewer.

21
00:00:49,434 --> 00:00:50,834
We're also doing
some very advanced

22
00:00:50,834 --> 00:00:53,200
shading techniques,
uh, on the water.

23
00:00:53,200 --> 00:00:54,534
So you can see
that we've implemented

24
00:00:54,534 --> 00:00:56,267
reflection and refraction.

25
00:00:56,267 --> 00:00:57,834
And these are coded
right in the source code

26
00:00:57,834 --> 00:01:01,100
of the application
so the application can control

27
00:01:01,100 --> 00:01:02,601
the visual appearance
of the water

28
00:01:02,601 --> 00:01:04,934
or other attributes
of the scene.

29
00:01:08,367 --> 00:01:09,501
The next thing
that we focused on

30
00:01:09,501 --> 00:01:11,067
was performance.

31
00:01:11,067 --> 00:01:13,868
So you'll notice we're running
at a smooth 60 hertz here.

32
00:01:13,868 --> 00:01:16,234
It gives it this very smooth,
liquid feel

33
00:01:16,234 --> 00:01:18,601
like you're really there,
you're in the scene.

34
00:01:18,601 --> 00:01:20,734
Um, the same,
uh, level of performance

35
00:01:20,734 --> 00:01:22,000
that you would expect
to see

36
00:01:22,000 --> 00:01:24,501
from, uh,
from a native application

37
00:01:24,501 --> 00:01:25,801
running
on the operating system.

38
00:01:25,801 --> 00:01:28,434
And here we're seeing it
in the browser.

39
00:01:28,434 --> 00:01:29,601
The other interesting aspect

40
00:01:29,601 --> 00:01:30,934
is we're doing
all of the graphics

41
00:01:30,934 --> 00:01:33,367
on the graphics processor,
on the GPU.

42
00:01:33,367 --> 00:01:36,167
So the CPU load
as we run this application

43
00:01:36,167 --> 00:01:37,868
is less than 10%.

44
00:01:37,868 --> 00:01:40,033
So the CPU is still there
for you to use

45
00:01:40,033 --> 00:01:42,267
in your JavaScript code
and by the browser

46
00:01:42,267 --> 00:01:44,000
to implement
your application logic,

47
00:01:44,000 --> 00:01:47,133
which is extremely important.

48
00:01:47,133 --> 00:01:48,801
Uh, and then the last point
about the demo

49
00:01:48,801 --> 00:01:51,200
that's interesting
is it's all JavaScript code.

50
00:01:51,200 --> 00:01:52,901
So you have
all the nice attributes

51
00:01:52,901 --> 00:01:54,868
of JavaScript
for web development.

52
00:01:54,868 --> 00:01:56,601
You can edit the code
right on your machine,

53
00:01:56,601 --> 00:01:59,133
test it on your machine,
deploy it easily.

54
00:01:59,133 --> 00:02:00,934
Uh, no complicated
build process.

55
00:02:00,934 --> 00:02:03,400
It's just JavaScript.

56
00:02:03,400 --> 00:02:05,434
So this is very cool
technology.

57
00:02:05,434 --> 00:02:06,868
But we still have
a long way to go

58
00:02:06,868 --> 00:02:08,501
until we achieve our dream.

59
00:02:08,501 --> 00:02:09,901
Where we want to get to
is the point

60
00:02:09,901 --> 00:02:12,334
where you type a URL
in the address bar,

61
00:02:12,334 --> 00:02:15,400
uh, go to a web site,
and play a rich,

62
00:02:15,400 --> 00:02:18,434
uh, interesting 3-D graphics
application.

63
00:02:18,434 --> 00:02:20,100
In order for this to happen,

64
00:02:20,100 --> 00:02:22,801
we need this capability
to be built into the browsers

65
00:02:22,801 --> 00:02:23,801
by default.

66
00:02:23,801 --> 00:02:25,601
So we need a common set
of APIs

67
00:02:25,601 --> 00:02:28,000
that are implemented widely
by all the dominant--

68
00:02:28,000 --> 00:02:30,000
all the--
all the browser vendors

69
00:02:30,000 --> 00:02:32,701
so that your browser of choice
does this intrinsically.

70
00:02:32,701 --> 00:02:35,200
It becomes a feature
of the browser itself.

71
00:02:35,200 --> 00:02:37,200
The key here
is standardization.

72
00:02:37,200 --> 00:02:39,400
So we're--we at Google
are working very closely

73
00:02:39,400 --> 00:02:42,033
with Apple, Mozilla,
Opera, and others

74
00:02:42,033 --> 00:02:44,601
in the context
of the standards organizations,

75
00:02:44,601 --> 00:02:46,067
to make this a reality.

76
00:02:46,067 --> 00:02:47,534
So we still have
a ways to go.

77
00:02:47,534 --> 00:02:49,634
But we've begun the process
of standardization

78
00:02:49,634 --> 00:02:51,968
for how 3-D graphics
will work on the web.

79
00:02:51,968 --> 00:02:55,467
We invite you to join
that discussion.

80
00:02:55,467 --> 00:02:56,834
The other thing
is we have to put it

81
00:02:56,834 --> 00:02:58,167
in the browser itself.

82
00:02:58,167 --> 00:03:00,000
And so we're hard at work
at Google

83
00:03:00,000 --> 00:03:02,601
integrating 3-D graphics
capabilities like these

84
00:03:02,601 --> 00:03:04,467
into the Chromium code base

85
00:03:04,467 --> 00:03:06,801
so that Chrome has the ability
to do this

86
00:03:06,801 --> 00:03:09,033
without the need
of any plug-in whatsoever.

87
00:03:09,033 --> 00:03:10,901
So we're very excited
about the directions

88
00:03:10,901 --> 00:03:13,267
these are--this is going.

89
00:03:13,267 --> 00:03:14,767
So this is all very cool.
It looks neat.

90
00:03:14,767 --> 00:03:16,033
It's very fun.

91
00:03:16,033 --> 00:03:17,934
It's nice to see the web
gain these capabilities.

92
00:03:17,934 --> 00:03:19,601
Uh, but it's still just
a demo.

93
00:03:19,601 --> 00:03:21,200
We're still in
the very early phase.

94
00:03:21,200 --> 00:03:22,801
This is a plug-in today.

95
00:03:22,801 --> 00:03:24,868
We're very excited
about the future.

96
00:03:24,868 --> 00:03:27,467
The other key to the puzzle here
is applications.

97
00:03:27,467 --> 00:03:29,801
Uh, we want to see real world
applications emerge

98
00:03:29,801 --> 00:03:32,767
where you and people like you
make applications

99
00:03:32,767 --> 00:03:34,901
in web sites that use
these capabilities

100
00:03:34,901 --> 00:03:36,300
to their full advantage.

101
00:03:36,300 --> 00:03:38,934
What is the next killer
3-D graphics applications

102
00:03:38,934 --> 00:03:40,067
on your web site?

103
00:03:40,067 --> 00:03:42,267
Is it a game?
Is it data visualization?

104
00:03:42,267 --> 00:03:43,834
Is it an engineering
application?

105
00:03:43,834 --> 00:03:45,434
Is it something new?

106
00:03:45,434 --> 00:03:46,834
So we're very excited
about the prospects

107
00:03:46,834 --> 00:03:48,000
for the future.

108
00:03:48,000 --> 00:03:50,501
We hope you will check it out
and, uh, join us

109
00:03:50,501 --> 00:03:53,767
in, uh, pushing it
over the finish line.

110
00:03:53,767 --> 00:03:56,868
[applause]

111
00:03:59,767 --> 00:04:01,567
Gundrota: Obviously,
if you'd like to learn more

112
00:04:01,567 --> 00:04:02,767
about what Matt
just showed you,

113
00:04:02,767 --> 00:04:05,200
there's the URL and you can get
all the details

114
00:04:05,200 --> 00:04:07,767
in addition to the sessions
that we're having on it.

115
00:04:07,767 --> 00:04:09,801
Going back
to the canvas capability,

116
00:04:09,801 --> 00:04:12,567
remember, uh, developers
are not going to use canvas

117
00:04:12,567 --> 00:04:14,033
if it isn't
broadly available.

118
00:04:14,033 --> 00:04:15,667
And we're very happy
to report

119
00:04:15,667 --> 00:04:18,734
that across all modern,
open source browsers,

120
00:04:18,734 --> 00:04:21,033
uh, Chrome, Firefox, Safari,

121
00:04:21,033 --> 00:04:22,834
we have this capability.

122
00:04:22,834 --> 00:04:24,100
I hear some
of the laughter.

123
00:04:24,100 --> 00:04:26,000
You must be wondering
why I didn't mention

124
00:04:26,000 --> 00:04:27,601
Internet Explorer.

125
00:04:27,601 --> 00:04:29,868
Uh, let me talk
about that briefly.

126
00:04:29,868 --> 00:04:32,100
Obviously, Microsoft,

127
00:04:32,100 --> 00:04:34,534
with its very large
market share,

128
00:04:34,534 --> 00:04:38,033
could do much
to move the web forward.

129
00:04:38,033 --> 00:04:40,634
And so you can imagine
how excited we were

130
00:04:40,634 --> 00:04:42,701
to hear Microsoft's
public statements

131
00:04:42,701 --> 00:04:45,834
about their commitment
to the HTML 5 standards.

132
00:04:45,834 --> 00:04:48,300
And, uh, that very, very much
excites us.

133
00:04:48,300 --> 00:04:52,234
And we eagerly await
to see, uh, evidence of that.

134
00:04:52,234 --> 00:04:54,300
[audience laughs]

135
00:04:54,300 --> 00:04:56,634
That's all I'm going to mention
about IE today.

136
00:04:56,634 --> 00:04:58,200
Now that I've danced past
that elephant,

137
00:04:58,200 --> 00:04:59,868
let's move on.

138
00:04:59,868 --> 00:05:03,267
Uh, let's talk about video.

139
00:05:03,267 --> 00:05:05,167
Just like I asked you
with canvas,

140
00:05:05,167 --> 00:05:07,000
let me ask you with video.

141
00:05:07,000 --> 00:05:09,234
How do you play video
in a browser today?

142
00:05:09,234 --> 00:05:11,934
You know, as a developer,
you really have a tough job.

143
00:05:11,934 --> 00:05:13,901
You got to ensure
that your users

144
00:05:13,901 --> 00:05:16,400
have the correct plug-in
installed, uh,

145
00:05:16,400 --> 00:05:17,667
in their browser.

146
00:05:17,667 --> 00:05:19,400
In addition to having
a plug-in stalled,

147
00:05:19,400 --> 00:05:21,601
you got to ask yourself
"does that plug-in support

148
00:05:21,601 --> 00:05:23,467
"the appropriate codec
that's going to--

149
00:05:23,467 --> 00:05:25,400
that that video
is encoded in?"

150
00:05:25,400 --> 00:05:27,968
And there's some variables
that are outside of your control

151
00:05:27,968 --> 00:05:29,100
as a developer.

152
00:05:29,100 --> 00:05:31,934
So video is hard.

153
00:05:31,934 --> 00:05:33,701
You might ask yourself
if you were responsible

154
00:05:33,701 --> 00:05:36,667
for moving the web forward,
what would Occam do?

155
00:05:36,667 --> 00:05:40,267
Well, how about a video tag
as simple as image.

156
00:05:40,267 --> 00:05:42,934
That's exactly what HTML 5
video gives you.

157
00:05:42,934 --> 00:05:45,100
A simple tag where you point it
to the source

158
00:05:45,100 --> 00:05:47,100
and the browser handles
the rest.

159
00:05:47,100 --> 00:05:49,200
Let me show you
some examples.

160
00:05:49,200 --> 00:05:50,601
Let's go to machine one.

161
00:05:50,601 --> 00:05:53,434
man: Billy's been trying
to customize his web browser.

162
00:05:53,434 --> 00:05:56,300
man: This'll make it
go faster.

163
00:05:58,400 --> 00:05:59,801
Gundrota: Okay, that's--
that's one way

164
00:05:59,801 --> 00:06:01,234
to make the web go faster.

165
00:06:01,234 --> 00:06:03,968
Uh, it's a--it's a video
playing in the--in the browser.

166
00:06:03,968 --> 00:06:07,100
No big deal until you look
at the source code.

167
00:06:07,100 --> 00:06:08,434
And you look
at the source code here

168
00:06:08,434 --> 00:06:10,734
and you can see use
of the video tag

169
00:06:10,734 --> 00:06:12,000
to play that video

170
00:06:12,000 --> 00:06:14,534
and nothing more than JavaScript
to play and stop it.

171
00:06:14,534 --> 00:06:16,968
Of course,
because it's integrated

172
00:06:16,968 --> 00:06:19,968
right within the browser--
let's go back to that demo--

173
00:06:19,968 --> 00:06:21,167
one of the benefits
is, like, fo--

174
00:06:21,167 --> 00:06:22,434
I can start a rotate.

175
00:06:22,434 --> 00:06:25,000
This is just a simple
JavaScript CSS transform.

176
00:06:25,000 --> 00:06:26,767
And look, I'm rotating
the video.

177
00:06:26,767 --> 00:06:28,367
I can even play it
if I wanted to.

178
00:06:28,367 --> 00:06:30,801
But it gives you a sense
of--of the advantage

179
00:06:30,801 --> 00:06:32,601
of using something
that's intrinsic

180
00:06:32,601 --> 00:06:34,200
to that web
programming model.

181
00:06:34,200 --> 00:06:36,868
DOM manipulation
just like any other element

182
00:06:36,868 --> 00:06:38,133
with the video tag.

183
00:06:38,133 --> 00:06:40,868
Let's go on
to the next demonstration.

184
00:06:40,868 --> 00:06:43,033
This is an experiment.

185
00:06:43,033 --> 00:06:44,801
We are not announcing today
that YouTube

186
00:06:44,801 --> 00:06:46,133
is going to be built
this way.

187
00:06:46,133 --> 00:06:48,434
This is a demo that we just
wanted to show you

188
00:06:48,434 --> 00:06:50,701
to get the creative juices
going.

189
00:06:50,701 --> 00:06:52,868
Uh, obviously,
YouTube is a sight

190
00:06:52,868 --> 00:06:54,834
that you no doubt
know and love.

191
00:06:54,834 --> 00:06:56,434
Uh, this looks like YouTube.

192
00:06:56,434 --> 00:06:59,033
In fact, there's a--
one change

193
00:06:59,033 --> 00:07:00,400
that's pretty significant,

194
00:07:00,400 --> 00:07:02,200
which is if you actually look
at the source here,

195
00:07:02,200 --> 00:07:04,467
it's implemented using
the video tag.

196
00:07:04,467 --> 00:07:06,934
And because it's implemented
using the video tag,

197
00:07:06,934 --> 00:07:08,734
those videos play
and they're intrinsic

198
00:07:08,734 --> 00:07:11,067
to that, uh, HTML page.

199
00:07:11,067 --> 00:07:12,567
You see as he mouses
over the thumbnails,

200
00:07:12,567 --> 00:07:13,834
they just play.

201
00:07:13,834 --> 00:07:16,968
There are--those are not
1, 2, 3, 4, 5, 6 plug-ins.

202
00:07:16,968 --> 00:07:19,033
I'm not marshalling
across boundaries.

203
00:07:19,033 --> 00:07:22,300
This is JavaScript,
the video tag, and that's it.

204
00:07:22,300 --> 00:07:23,534
And it kind of gives you
an example

205
00:07:23,534 --> 00:07:25,901
of where we might be going,
uh, in the future.

206
00:07:25,901 --> 00:07:31,601
[applause]

207
00:07:31,601 --> 00:07:34,968
All right, let's--let's go back
to the slides.

208
00:07:37,501 --> 00:07:42,200
Once again, very happy to say,
across modern browsers,

209
00:07:42,200 --> 00:07:44,434
broad support
has been implemented

210
00:07:44,434 --> 00:07:46,033
for the video tag.

211
00:07:46,033 --> 00:07:48,033
Now let's talk
about geolocation.

212
00:07:48,033 --> 00:07:50,968
At Google, we believe
that almost all kinds of apps

213
00:07:50,968 --> 00:07:52,067
could be better

214
00:07:52,067 --> 00:07:53,901
if they had access
to geolocation.

215
00:07:53,901 --> 00:07:55,167
Everything
from business software

216
00:07:55,167 --> 00:07:56,567
to social software.

217
00:07:56,567 --> 00:07:59,133
Think about your CRM software
if you're a business.

218
00:07:59,133 --> 00:08:02,467
When your sales agent lands
in Denver,

219
00:08:02,467 --> 00:08:04,934
why doesn't the CRM software
recognize his location

220
00:08:04,934 --> 00:08:07,501
and show him or her
the current customers

221
00:08:07,501 --> 00:08:09,400
based on proximity?

222
00:08:09,400 --> 00:08:10,701
In social software,

223
00:08:10,701 --> 00:08:13,200
why isn't the photo
automatically geotagged?

224
00:08:13,200 --> 00:08:15,734
Why aren't my updates,
my tweets,

225
00:08:15,734 --> 00:08:18,601
uh, automatically tagged
with location?

226
00:08:18,601 --> 00:08:20,968
Well, the reality is
is that accessing location

227
00:08:20,968 --> 00:08:24,000
and using it is hard today.

228
00:08:24,000 --> 00:08:26,200
You might think, like,
what about GPS?

229
00:08:26,200 --> 00:08:28,400
GPS takes a long time
to get a fix.

230
00:08:28,400 --> 00:08:30,901
GPS may often not work
indoors.

231
00:08:30,901 --> 00:08:33,067
What about IP--
IP-based location?

232
00:08:33,067 --> 00:08:35,367
Well, it's too fuzzy.
It's not granular enough.

233
00:08:35,367 --> 00:08:37,767
I mean, heaven forbid
your users are AOL users

234
00:08:37,767 --> 00:08:40,000
where the IP has gone through
a proxy in Virginia

235
00:08:40,000 --> 00:08:42,334
and all the location reports
is Virginia.

236
00:08:42,334 --> 00:08:46,367
And so it hasn't been possible
to get good quality data sources

237
00:08:46,367 --> 00:08:48,100
until the last year.

238
00:08:48,100 --> 00:08:50,267
Companies like Skyhook--

239
00:08:50,267 --> 00:08:53,334
companies like Google
and others have created

240
00:08:53,334 --> 00:08:58,100
large databases of Wi-Fi data
and cell ID data

241
00:08:58,100 --> 00:09:02,567
and really have mapped
the entire world with coverage.

242
00:09:02,567 --> 00:09:05,567
These sources combined
with GPS and other sources

243
00:09:05,567 --> 00:09:09,767
have now given us the ability
to accurately triangulate

244
00:09:09,767 --> 00:09:12,033
or pinpoint
an individual's location

245
00:09:12,033 --> 00:09:14,734
with their consent.

246
00:09:14,734 --> 00:09:16,434
Of course,
you might be wondering,

247
00:09:16,434 --> 00:09:18,100
well, that's good--
that's great, Vic,

248
00:09:18,100 --> 00:09:20,400
but how do you get it
in the browser?

249
00:09:20,400 --> 00:09:22,200
Well, guess what,
the last year,

250
00:09:22,200 --> 00:09:24,601
we have seen
tremendous progress

251
00:09:24,601 --> 00:09:28,334
with standardization
of the W3C geolocation API,

252
00:09:28,334 --> 00:09:30,434
which is implemented
in these browsers.

253
00:09:30,434 --> 00:09:32,667
So you as a developer
can take advantage

254
00:09:32,667 --> 00:09:36,200
of these capabilities.

255
00:09:36,200 --> 00:09:38,767
To demonstrate these
and kind of talk about them,

256
00:09:38,767 --> 00:09:40,367
I'd like to invite up
Jay Sullivan,

257
00:09:40,367 --> 00:09:41,834
Vice President for Mozilla.

258
00:09:41,834 --> 00:09:42,901
Jay, welcome.

259
00:09:42,901 --> 00:09:44,801
Sullivan: Thanks, Vic.

260
00:09:44,801 --> 00:09:46,067
Good to see you.

261
00:09:46,067 --> 00:09:49,133
Gundrota: Jay...

262
00:09:49,133 --> 00:09:51,334
just one moment before you go
into your, uh, presentation

263
00:09:51,334 --> 00:09:52,634
and demo here.

264
00:09:52,634 --> 00:09:54,634
I did want to take a moment
and just say thank you

265
00:09:54,634 --> 00:09:56,267
to the Mozilla community.

266
00:09:56,267 --> 00:09:57,634
Uh, you know,
to a large extent,

267
00:09:57,634 --> 00:09:59,133
we have the luxury
this morning of talking

268
00:09:59,133 --> 00:10:00,467
about modern browsers,

