1
00:00:06,767 --> 00:00:07,901
Lamm:
Hi, I'm Stephen Lamm,

2
00:00:07,901 --> 00:00:09,801
and I work at Google
in Web Performance.

3
00:00:09,801 --> 00:00:11,501
And today I want to tell you
a little bit

4
00:00:11,501 --> 00:00:13,767
about browser caching
and what you can do

5
00:00:13,767 --> 00:00:15,300
to configure your web pages

6
00:00:15,300 --> 00:00:17,767
so that they're cached properly
in browsers.

7
00:00:17,767 --> 00:00:19,834
And you'll find that,
once you learn it,

8
00:00:19,834 --> 00:00:21,367
it's really easy
to implement it,

9
00:00:21,367 --> 00:00:22,801
and you get a double win,

10
00:00:22,801 --> 00:00:25,033
because not only do your
web pages load more quickly,

11
00:00:25,033 --> 00:00:28,100
but then there's less of a load
on your web servers as well.

12
00:00:28,100 --> 00:00:31,334
Browsers have caches to store
local copies of resources

13
00:00:31,334 --> 00:00:34,133
and web pages because those
resources often do not change

14
00:00:34,133 --> 00:00:35,434
for a long time.

15
00:00:35,434 --> 00:00:37,033
And by storing a local copy,

16
00:00:37,033 --> 00:00:39,934
the browser can avoid having
to make another connection

17
00:00:39,934 --> 00:00:43,000
to the web server and
downloading that resource again.

18
00:00:43,000 --> 00:00:45,434
So now I'd like to show you
a demo

19
00:00:45,434 --> 00:00:49,033
where I'm gonna show you a web
page that has the resources

20
00:00:49,033 --> 00:00:50,801
with all the caching turned off

21
00:00:50,801 --> 00:00:53,033
so that each time
this page is loaded,

22
00:00:53,033 --> 00:00:56,701
the browser has to request
each image in this page.

23
00:00:56,701 --> 00:00:59,067
And then I'm gonna show you
the same page loaded again,

24
00:00:59,067 --> 00:01:00,868
but with the caching headers
turned on.

25
00:01:00,868 --> 00:01:03,634
And you can see the difference
in performance that it has

26
00:01:03,634 --> 00:01:04,868
on the web page.

27
00:01:04,868 --> 00:01:06,834
So here we're loading the page

28
00:01:06,834 --> 00:01:08,801
with the Expires headers
turned off

29
00:01:08,801 --> 00:01:10,667
for all the different resources.

30
00:01:10,667 --> 00:01:13,100
And as you can see, when
the resources are coming in,

31
00:01:13,100 --> 00:01:15,701
they're all coming
from the web server.

32
00:01:15,701 --> 00:01:18,334
Now I'm gonna maximize
the HttpWatch window

33
00:01:18,334 --> 00:01:20,934
so we can look at one image
in particular

34
00:01:20,934 --> 00:01:24,167
and see what
cache control headers it's set.

35
00:01:24,167 --> 00:01:27,434
If you look,
the cache control header is set

36
00:01:27,434 --> 00:01:29,100
so that there is no cache,

37
00:01:29,100 --> 00:01:31,734
so that this item has to be
requested from the server

38
00:01:31,734 --> 00:01:32,834
each time.

39
00:01:32,834 --> 00:01:35,000
The ETag is not set.

40
00:01:35,000 --> 00:01:38,767
And we have an Expires header
that is set in the past.

41
00:01:38,767 --> 00:01:42,033
Now moving on,
we're gonna load the same page,

42
00:01:42,033 --> 00:01:43,567
but this time all the images

43
00:01:43,567 --> 00:01:45,734
are gonna have
the Expires header on.

44
00:01:45,734 --> 00:01:50,067
And so here I type in
the different URL.

45
00:01:50,067 --> 00:01:52,534
I hit Enter.

46
00:01:52,534 --> 00:01:55,801
Now I'm gonna maximize
the HTTP window once again.

47
00:01:55,801 --> 00:01:57,567
I'm gonna click
on an image

48
00:01:57,567 --> 00:01:59,567
to show what the HTTP headers
look like.

49
00:01:59,567 --> 00:02:01,868
So now when we look
at the headers,

50
00:02:01,868 --> 00:02:05,567
we can say that the max-age
is set, it's set in seconds.

51
00:02:05,567 --> 00:02:08,767
And in this case, it works out
to ten years in the future.

52
00:02:08,767 --> 00:02:10,601
There's still no ETag set.

53
00:02:10,601 --> 00:02:12,467
There's also an Expires header.

54
00:02:12,467 --> 00:02:16,033
Now if you set both max-age
and the Expires header,

55
00:02:16,033 --> 00:02:19,534
the max-age header will override
the Expires header.

56
00:02:19,534 --> 00:02:21,400
And finally the Last-Modified
is set,

57
00:02:21,400 --> 00:02:25,934
and it's the same value
before back in 2006.

58
00:02:25,934 --> 00:02:27,033
So now let's load the page

59
00:02:27,033 --> 00:02:28,901
with the Expires on
one more time,

60
00:02:28,901 --> 00:02:31,701
click on the URL bar,
and hit Enter.

61
00:02:31,701 --> 00:02:35,267
And we see that the page loads
much more quickly this time

62
00:02:35,267 --> 00:02:37,133
because it's bringing everything
from cache,

63
00:02:37,133 --> 00:02:39,567
and that's shown here
with HttpWatch

64
00:02:39,567 --> 00:02:42,000
by having everything
in blue.

65
00:02:42,000 --> 00:02:44,734
As you can see, caching can have
a big impact

66
00:02:44,734 --> 00:02:46,834
on the performance
of your web pages.

67
00:02:46,834 --> 00:02:49,200
And it's one
of the easier things to set up.

68
00:02:49,200 --> 00:02:50,634
So thank you for watching,

69
00:02:50,634 --> 00:02:52,434
and for more information,
you can visit

70
00:02:52,434 --> 00:02:55,267
code.google.com/speed.

