1
00:00:01,200 --> 00:00:02,267
Raman: Hello, everyone.

2
00:00:02,267 --> 00:00:03,501
I am T.V. Raman
and this

3
00:00:03,501 --> 00:00:05,467
is my officemate
Charles Chen.

4
00:00:05,467 --> 00:00:07,701
And we hack together,
code together,

5
00:00:07,701 --> 00:00:09,334
so we
also talk together.

6
00:00:09,334 --> 00:00:10,734
Hopefully not
at the same time

7
00:00:10,734 --> 00:00:12,734
and hopefully
the phone won't talk

8
00:00:12,734 --> 00:00:15,200
while the two
of us are talking too.

9
00:00:15,200 --> 00:00:19,334
This talk is about building
eyes-free interfaces on Android.

10
00:00:19,334 --> 00:00:21,367
We are calling it,
"looking beyond the screen."

11
00:00:21,367 --> 00:00:23,033
That doesn't mean
you hold your phone like this

12
00:00:23,033 --> 00:00:24,934
and look at the world
over it.

13
00:00:24,934 --> 00:00:26,734
It's basically building
user interfaces

14
00:00:26,734 --> 00:00:29,367
that go over
and beyond the screen.

15
00:00:29,367 --> 00:00:32,601
This talk is structured
into two halves

16
00:00:32,601 --> 00:00:35,467
where the first half I'd like
to walk you through

17
00:00:35,467 --> 00:00:37,968
some of the thought processes
we went through

18
00:00:37,968 --> 00:00:39,667
in terms of coming up
with some

19
00:00:39,667 --> 00:00:41,734
of the UI paradigms
we are trying out.

20
00:00:41,734 --> 00:00:43,701
And in the second
half of the talk,

21
00:00:43,701 --> 00:00:45,367
Charles will sort of
walk you through

22
00:00:45,367 --> 00:00:47,968
some of the libraries
we are open-sourcing

23
00:00:47,968 --> 00:00:49,467
that actually allow
you to bring

24
00:00:49,467 --> 00:00:52,534
some of this UI code
into your own applications.

25
00:00:52,534 --> 00:00:54,701
So let's start
working through

26
00:00:54,701 --> 00:00:56,767
the media sections
of this talk.

27
00:00:56,767 --> 00:00:58,133
The first section
of this talk,

28
00:00:58,133 --> 00:01:01,400
I'd like to focus
on what it means

29
00:01:01,400 --> 00:01:04,534
to sort of be someone
who does UI research

30
00:01:04,534 --> 00:01:06,801
and UI implementations
in the mobile world,

31
00:01:06,801 --> 00:01:09,901
because I believe this
is distinctly different

32
00:01:09,901 --> 00:01:12,667
from the last 35 years of
human-computer interaction

33
00:01:12,667 --> 00:01:14,400
that has gone before.

34
00:01:14,400 --> 00:01:16,100
And you'll sort of see
why I think that

35
00:01:16,100 --> 00:01:17,734
in the next few slides.

36
00:01:17,734 --> 00:01:20,601
But we are all geeks here.
We are developers here.

37
00:01:20,601 --> 00:01:22,734
Let's sort of celebrate
our geekdom for a minute

38
00:01:22,734 --> 00:01:27,701
by sort of looking at that phone
that we all have

39
00:01:27,701 --> 00:01:30,767
and understanding why that's
an engineer's dream.

40
00:01:30,767 --> 00:01:32,801
Obviously, that phone
is more powerful

41
00:01:32,801 --> 00:01:35,601
than the desktop workstation
I had 20 years ago,

42
00:01:35,601 --> 00:01:37,067
15 years ago.

43
00:01:37,067 --> 00:01:39,834
Obviously, this thing can do
a lot more

44
00:01:39,834 --> 00:01:41,901
because it's connected
to the network.

45
00:01:41,901 --> 00:01:44,067
Those are enablers.

46
00:01:44,067 --> 00:01:46,367
Now the third enabler
that you have, obviously,

47
00:01:46,367 --> 00:01:48,634
is building cool
user interfaces

48
00:01:48,634 --> 00:01:52,100
that help surface all this
coolness to the end users

49
00:01:52,100 --> 00:01:54,334
so that they can
actually use it.

50
00:01:54,334 --> 00:01:56,334
So in that sense,

51
00:01:56,334 --> 00:01:59,634
what does it mean to build
innovative user interfaces

52
00:01:59,634 --> 00:02:02,067
for the mobile world?

53
00:02:02,067 --> 00:02:04,067
Let's ask the question,

54
00:02:04,067 --> 00:02:05,834
"what is a user interface?"
first.

55
00:02:05,834 --> 00:02:08,167
I didn't include that particular
slide in this talk,

56
00:02:08,167 --> 00:02:11,000
but many years ago,
I used to carry around a slide

57
00:02:11,000 --> 00:02:13,667
that is a very simple slide
that sort of explained

58
00:02:13,667 --> 00:02:16,601
what I thought of
as a user interface.

59
00:02:16,601 --> 00:02:20,133
If you pull up very specific
implementations

60
00:02:20,133 --> 00:02:22,601
of a user interface,
such as a GUI,

61
00:02:22,601 --> 00:02:24,234
such as
the next Windows desktop,

62
00:02:24,234 --> 00:02:26,834
a Windows desktop,
a Mac UI,

63
00:02:26,834 --> 00:02:30,734
there is something fundamentally
simple about the UI

64
00:02:30,734 --> 00:02:32,901
It's about human-computer
interaction

65
00:02:32,901 --> 00:02:34,434
as Kai will tell you.

66
00:02:34,434 --> 00:02:36,734
But then that again
has become a buzzword.

67
00:02:36,734 --> 00:02:38,467
So there's the human
and there's the computer.

68
00:02:38,467 --> 00:02:41,234
What is this interaction
we are talking about?

69
00:02:41,234 --> 00:02:43,234
The human-computer interaction
that makes up

70
00:02:43,234 --> 00:02:46,534
the user interface is
really about two things.

71
00:02:46,534 --> 00:02:48,400
It's you, the human,

72
00:02:48,400 --> 00:02:52,400
communicating your intent
to the machine,

73
00:02:52,400 --> 00:02:55,300
the machine computing
on that intent,

74
00:02:55,300 --> 00:02:59,267
and coming up with some answer
and grabbing your attention.

75
00:02:59,267 --> 00:03:01,367
So I used to draw
a little diamond

76
00:03:01,367 --> 00:03:03,334
with a human
on one vertex,

77
00:03:03,334 --> 00:03:04,701
the computer
on another vertex

78
00:03:04,701 --> 00:03:06,734
and sort of
draw arrows saying,

79
00:03:06,734 --> 00:03:10,300
"intention, attention,
input, and output."

80
00:03:10,300 --> 00:03:12,534
So from you goes
input to the machine

81
00:03:12,534 --> 00:03:14,167
to convey your intentions.

82
00:03:14,167 --> 00:03:16,200
Comes back as output
and attention.

83
00:03:16,200 --> 00:03:19,300
And so if you take that view
of user interaction,

84
00:03:19,300 --> 00:03:22,234
UIs that you build
have to fit

85
00:03:22,234 --> 00:03:24,534
into the user's
mode of working,

86
00:03:24,534 --> 00:03:26,100
not the other way around.

87
00:03:26,100 --> 00:03:29,334
So this is about bending
technology to our will.

88
00:03:29,334 --> 00:03:32,133
And an open platform,

89
00:03:32,133 --> 00:03:33,767
especially
in the mobile world,

90
00:03:33,767 --> 00:03:36,901
is extremely conducive
to doing that,

91
00:03:36,901 --> 00:03:40,167
because now the only thing
that blocks, limits

92
00:03:40,167 --> 00:03:42,634
how much you can hack
is your imagination.

93
00:03:42,634 --> 00:03:46,067
So you have all
of the peripherals you want.

94
00:03:46,067 --> 00:03:50,000
You have way more peripherals
than what we've had in the past.

95
00:03:50,000 --> 00:03:52,200
And that's one of
the most important things

96
00:03:52,200 --> 00:03:55,434
about doing mobile
user interfaces.

97
00:03:55,434 --> 00:03:57,100
Let's talk--
go to the next slide

98
00:03:57,100 --> 00:03:58,667
about eyes-free
interaction.

99
00:03:58,667 --> 00:04:02,901
So clearly there are many,
many cool things you can do

100
00:04:02,901 --> 00:04:05,934
as you innovate
along the UI access.

101
00:04:05,934 --> 00:04:08,868
The specific thing that Charles
and I had been focusing on

102
00:04:08,868 --> 00:04:13,601
is using these phones
without looking at them.

103
00:04:13,601 --> 00:04:16,834
No, this is not just about
the blind user.

104
00:04:16,834 --> 00:04:20,968
This is more to say,
"how do you use these devices

105
00:04:20,968 --> 00:04:24,234
"if you are not capable of,
willing to,

106
00:04:24,234 --> 00:04:27,968
or not in a position
to look at the screen?"

107
00:04:27,968 --> 00:04:30,067
And that completely
changes your perspective

108
00:04:30,067 --> 00:04:32,167
on how you build
such things.

109
00:04:32,167 --> 00:04:35,267
Those situations
are obviously many.

110
00:04:35,267 --> 00:04:36,501
You might be driving.

111
00:04:36,501 --> 00:04:38,200
You might be walking
along the corridor

112
00:04:38,200 --> 00:04:39,834
talking to your friends.

113
00:04:39,834 --> 00:04:42,400
There are many situations where
you do not want

114
00:04:42,400 --> 00:04:45,834
to hold your phone
like this and squint at it.

115
00:04:45,834 --> 00:04:48,901
A couple of weeks ago,
I was walking down

116
00:04:48,901 --> 00:04:52,400
one of the corridors at Google
with my guide dog

117
00:04:52,400 --> 00:04:54,834
and my dog suddenly swerved,
and I asked Charles

118
00:04:54,834 --> 00:04:57,868
what happened and he said,
"That was a lucky save.

119
00:04:57,868 --> 00:04:59,634
Somebody almost
walked into you."

120
00:04:59,634 --> 00:05:01,634
I said, "That was
an interesting response," right?

121
00:05:01,634 --> 00:05:03,300
It wasn't,
"I walked into someone."

122
00:05:03,300 --> 00:05:05,367
It was somebody
almost walked into me.

123
00:05:05,367 --> 00:05:07,501
Well, the reason somebody
almost walked into me

124
00:05:07,501 --> 00:05:09,501
was that person was holding
their cell phone

125
00:05:09,501 --> 00:05:11,467
like this
doing email.

126
00:05:11,467 --> 00:05:13,033
This is not safe, right?

127
00:05:13,033 --> 00:05:16,000
I mean, cell phones aren't just
a hazard when you're driving.

128
00:05:16,000 --> 00:05:17,901
I mean, if you start using
cell phones like this,

129
00:05:17,901 --> 00:05:20,667
you need to get tickets
when you're walking too.

130
00:05:20,667 --> 00:05:23,167
So how do you avoid that?
[laughter]

131
00:05:23,167 --> 00:05:26,667
So I think
eyes-free interaction

132
00:05:26,667 --> 00:05:31,367
is really about fitting
into the user's life.

133
00:05:31,367 --> 00:05:33,667
Technology has to sort of
come to that point

134
00:05:33,667 --> 00:05:35,133
where we are able
to do that.

135
00:05:35,133 --> 00:05:37,000
So let's sort of go
to the next slide

136
00:05:37,000 --> 00:05:40,501
and ask what is so cool
about these new phones

137
00:05:40,501 --> 00:05:42,534
that let you do
all these things.

138
00:05:42,534 --> 00:05:46,601
One reason I believe
that sort of the GUI

139
00:05:46,601 --> 00:05:50,634
hasn't really evolved beyond
what Xerox PARC built

140
00:05:50,634 --> 00:05:55,167
in the late '70s is that
the peripherals available

141
00:05:55,167 --> 00:05:59,400
to the GUI designer have not
evolved since then.

142
00:05:59,400 --> 00:06:01,100
Doug Engelbart
invented the mouse,

143
00:06:01,100 --> 00:06:03,868
PARC invented
the bitmap screen,

144
00:06:03,868 --> 00:06:05,334
and the rest is history.

145
00:06:05,334 --> 00:06:07,467
And sadly,
history is all you've had

146
00:06:07,467 --> 00:06:09,834
in that the GUI
has not changed.

147
00:06:09,834 --> 00:06:12,801
Yes, people have worked on how
to layout menus better.

148
00:06:12,801 --> 00:06:15,334
People have learned
how to cram more things

149
00:06:15,334 --> 00:06:16,868
into that limited real estate.

150
00:06:16,868 --> 00:06:20,601
But the fundamental peripherals
with which you interact

151
00:06:20,601 --> 00:06:22,033
with the graphical
user interface

152
00:06:22,033 --> 00:06:23,901
have not changed.

153
00:06:23,901 --> 00:06:26,267
Look at that phone
and count out the peripherals

154
00:06:26,267 --> 00:06:28,467
versus what your laptop has.

155
00:06:28,467 --> 00:06:32,067
Your laptop has a display,
a monitor, a mouse,

156
00:06:32,067 --> 00:06:36,767
a microphone and a speaker,
and perhaps a webcam.

157
00:06:36,767 --> 00:06:38,834
Those latter three,
the microphone,

158
00:06:38,834 --> 00:06:40,667
the speaker,
and the webcam,

159
00:06:40,667 --> 00:06:43,367
are actually quite awkward
to use on a laptop.

160
00:06:43,367 --> 00:06:45,100
Especially the laptop.

161
00:06:45,100 --> 00:06:47,701
Look at your camera.
Look at your phone.

162
00:06:47,701 --> 00:06:49,267
It's a camera.
It's a keyboard.

163
00:06:49,267 --> 00:06:50,767
It's all of these things.

164
00:06:50,767 --> 00:06:53,868
But now think of it
not as all those devices,

165
00:06:53,868 --> 00:06:57,167
but think of it as your computer
in your pocket

166
00:06:57,167 --> 00:06:59,767
with the ability
to sense the world

167
00:06:59,767 --> 00:07:03,567
and see how many more ways
it can sense the world

168
00:07:03,567 --> 00:07:06,000
as opposed to your laptop.

169
00:07:06,000 --> 00:07:07,567
Simple example.

170
00:07:07,567 --> 00:07:10,033
There is a, you know,

171
00:07:10,033 --> 00:07:13,000
mobile scavenger hunt
being announced today.

172
00:07:13,000 --> 00:07:15,067
There is a piece of paper
stuck on the wall

173
00:07:15,067 --> 00:07:16,534
with a QR code.

174
00:07:16,534 --> 00:07:18,801
You can just walk past it,
point your phone at it,

175
00:07:18,801 --> 00:07:20,868
get a URL,
and start browsing.

176
00:07:20,868 --> 00:07:22,300
Isn't that cool?

177
00:07:22,300 --> 00:07:25,534
That's because your phone
has many eyes

178
00:07:25,534 --> 00:07:28,767
and many ears by which
it can sense the world.

179
00:07:28,767 --> 00:07:31,200
And the more it can
sense the world,

180
00:07:31,200 --> 00:07:33,934
the better position
your phone has

181
00:07:33,934 --> 00:07:38,200
with respect to getting
a handle on your intent,

182
00:07:38,200 --> 00:07:40,400
on your intention
as a user.

183
00:07:40,400 --> 00:07:42,167
And the cool thing
about building

184
00:07:42,167 --> 00:07:43,934
mobile user interfaces--

185
00:07:43,934 --> 00:07:47,901
and this may be
a little contradictory

186
00:07:47,901 --> 00:07:50,601
to someone who does
user interfaces

187
00:07:50,601 --> 00:07:52,801
as their
be-all, end-all goal--

188
00:07:52,801 --> 00:07:56,334
is you actually minimize
user interaction.

189
00:07:56,334 --> 00:07:59,033
So in the desktop world
it was always cool

190
00:07:59,033 --> 00:08:01,634
to make the user interact
and then build

191
00:08:01,634 --> 00:08:04,601
newer, more powerful widgets
and gadgets

192
00:08:04,601 --> 00:08:07,701
with which
the user interacted.

193
00:08:07,701 --> 00:08:10,367
With your mobile devices,
I believe we need

194
00:08:10,367 --> 00:08:13,434
to go one step further,
which is,

195
00:08:13,434 --> 00:08:16,334
"user interaction is cool,
but wouldn't it

196
00:08:16,334 --> 00:08:18,334
"be even nicer
if your device could do

197
00:08:18,334 --> 00:08:20,601
"what you wanted
and show you what you wanted

198
00:08:20,601 --> 00:08:23,634
before you went
and interacted with it?"

199
00:08:23,634 --> 00:08:25,400
Because you are not
taking your phone out

200
00:08:25,400 --> 00:08:28,400
of your pocket in order
to interact with the phone.

201
00:08:28,400 --> 00:08:30,067
You're taking the phone
out of your pocket

202
00:08:30,067 --> 00:08:31,734
to interact with the world.

203
00:08:31,734 --> 00:08:33,334
You're taking the phone out
of your pocket

204
00:08:33,334 --> 00:08:35,133
to find out where
to go have dinner.

205
00:08:35,133 --> 00:08:36,634
You're taking the phone
out of your pocket

206
00:08:36,634 --> 00:08:39,267
to go talk to your buddy,
not to interact with the phone.

207
00:08:39,267 --> 00:08:41,033
So this is really
what is cool

208
00:08:41,033 --> 00:08:43,234
about building innovative
user interaction

209
00:08:43,234 --> 00:08:44,534
on mobile phones.

210
00:08:44,534 --> 00:08:46,000
You are really focusing on,

211
00:08:46,000 --> 00:08:47,467
"how shall I minimize clicks?

212
00:08:47,467 --> 00:08:49,534
"How shall I minimize
screen switches?

213
00:08:49,534 --> 00:08:51,334
"How shall I minimize
context switches?

214
00:08:51,334 --> 00:08:53,968
And how shall I have the user
get his work done?"

215
00:08:53,968 --> 00:08:56,534
So let's go to the next
section of the slide.

216
00:08:56,534 --> 00:08:59,701
So as a case study,
I'd like to take you through

217
00:08:59,701 --> 00:09:01,968
two things that we've built.

218
00:09:01,968 --> 00:09:05,501
You can actually see
Youtube demos of this

219
00:09:05,501 --> 00:09:08,400
on the eyes-free
Android channel.

220
00:09:08,400 --> 00:09:09,701
What I'd like to work--

221
00:09:09,701 --> 00:09:11,634
We will do demos
during the session,

222
00:09:11,634 --> 00:09:14,534
but what these slides
are really about

223
00:09:14,534 --> 00:09:17,200
are sort of walking
you through the thought process

224
00:09:17,200 --> 00:09:20,334
that went towards coming up
with these solutions.

225
00:09:20,334 --> 00:09:22,901
Because I, personally,
when I see someone

226
00:09:22,901 --> 00:09:26,100
show me a solution
they've come up with,

227
00:09:26,100 --> 00:09:29,033
I often find the process
of "how did you get that"

228
00:09:29,033 --> 00:09:31,100
more interesting than
the eventual artifact.

229
00:09:31,100 --> 00:09:34,567
And hopefully that applies
in this case too.

230
00:09:34,567 --> 00:09:37,067
So the problem
we were solving--

231
00:09:37,067 --> 00:09:39,868
The specific problem that
we solved last September

232
00:09:39,868 --> 00:09:42,801
was I wanted to start using
the Android phone

233
00:09:42,801 --> 00:09:45,300
as my primary phone because
I believed

234
00:09:45,300 --> 00:09:47,467
that that was the only way
I would build

235
00:09:47,467 --> 00:09:49,601
the right
user interaction environment

236
00:09:49,601 --> 00:09:51,834
that matched my needs
and the needs

237
00:09:51,834 --> 00:09:53,300
of eyes-free interaction.

238
00:09:53,300 --> 00:09:56,367
So the Android phone
is a nice, smart computer.

239
00:09:56,367 --> 00:09:57,868
It's all of these things.

240
00:09:57,868 --> 00:10:00,667
But the reason you first
put it in your pocket

241
00:10:00,667 --> 00:10:02,634
was because it's a phone.

242
00:10:02,634 --> 00:10:05,968
And many of those platforms
I had had before it

243
00:10:05,968 --> 00:10:09,200
did a lot of things,
but they were so complicated

244
00:10:09,200 --> 00:10:11,868
to use that I stopped making
phone calls with them.

245
00:10:11,868 --> 00:10:13,734
And to me,
that was a problem.

246
00:10:13,734 --> 00:10:15,968
So the first thing
we worked on was,

247
00:10:15,968 --> 00:10:18,868
"How can I use
the phone eyes?"

248
00:10:18,868 --> 00:10:20,601
So this is
an interesting question.

249
00:10:20,601 --> 00:10:23,701
You could have sort of pandered
on the interesting problem here

250
00:10:23,701 --> 00:10:25,200
and said,
"Well, it has a keyboard.

251
00:10:25,200 --> 00:10:27,033
Pull out the keyboard
and dial it."

252
00:10:27,033 --> 00:10:28,567
But that's inconvenient.

253
00:10:28,567 --> 00:10:30,567
And as I said,
if I had done that

254
00:10:30,567 --> 00:10:33,367
I would have joined the club
of people walking like this

255
00:10:33,367 --> 00:10:35,734
and I promise you I would
definitely walk into things

256
00:10:35,734 --> 00:10:37,400
if I did that.

257
00:10:37,400 --> 00:10:41,300
So the question was,
"How do you actually use

258
00:10:41,300 --> 00:10:45,501
that touch display
and do things with it?"

259
00:10:45,501 --> 00:10:48,033
Common wisdom said,
if you cannot see,

260
00:10:48,033 --> 00:10:49,834
you cannot use
a touchscreen.

261
00:10:49,834 --> 00:10:53,868
And so the way you sort of
debunk myths like that

262
00:10:53,868 --> 00:10:57,200
for yourself is to go ask
the question, "Why?"

263
00:10:57,200 --> 00:10:59,567
You know, two-year-olds
ask the question "Why?"

264
00:10:59,567 --> 00:11:02,067
And succinctly,
I think we as developers,

265
00:11:02,067 --> 00:11:03,734
geeks, and scientists
need to ask

266
00:11:03,734 --> 00:11:05,367
that question
the whole time.

267
00:11:05,367 --> 00:11:08,934
So why is it
that most people believe

268
00:11:08,934 --> 00:11:13,100
that you must be able to see
in order to use a touchscreen

269
00:11:13,100 --> 00:11:14,701
to use an on-screen keyboard?

270
00:11:14,701 --> 00:11:15,901
It's very simple.

271
00:11:15,901 --> 00:11:17,167
How do you use
a touchscreen?

272
00:11:17,167 --> 00:11:20,601
There are two atomic acts
involved

273
00:11:20,601 --> 00:11:24,501
in activating
an on-screen control by touch.

274
00:11:24,501 --> 00:11:26,334
You need to look
at the screen

275
00:11:26,334 --> 00:11:28,734
in order to locate
the control.

276
00:11:28,734 --> 00:11:31,634
Then you need
to go push it

277
00:11:31,634 --> 00:11:34,067
and get some feedback
for having pushed it.

278
00:11:34,067 --> 00:11:35,968
Clearly, if you're
not looking at the screen,

279
00:11:35,968 --> 00:11:38,734
you need feedback
at both levels.

280
00:11:38,734 --> 00:11:43,334
And the showstopper that most
people stumble on is,

281
00:11:43,334 --> 00:11:45,267
"Well, you can't see it at all
in order to see

282
00:11:45,267 --> 00:11:47,400
"where the button is if you're
not looking at the screen.

283
00:11:47,400 --> 00:11:49,033
Therefore,
you cannot use it."

284
00:11:49,033 --> 00:11:51,367
So let's ask
the "why" question again

285
00:11:51,367 --> 00:11:52,734
like a two-year-old,
right?

286
00:11:52,734 --> 00:11:54,033
Why do you need
to see the button

287
00:11:54,033 --> 00:11:55,868
to know where it is?

288
00:11:55,868 --> 00:11:58,634
Well, because the button is
positioned in a fixed place.

289
00:11:58,634 --> 00:12:00,000
You need to know where,
dummy.

290
00:12:00,000 --> 00:12:02,834
Well, why is it positioned
in a fixed place?

291
00:12:02,834 --> 00:12:04,834
And the answer
immediately emerges.

292
00:12:04,834 --> 00:12:06,467
Well, it needn't be
in a fixed place.

293
00:12:06,467 --> 00:12:08,033
Somebody chose to put it
in a fixed place.

294
00:12:08,033 --> 00:12:09,734
It was in a fixed place,
right?

295
00:12:09,734 --> 00:12:13,100
So the other way
to think about it is

296
00:12:13,100 --> 00:12:15,100
rather than you
looking at the screen

297
00:12:15,100 --> 00:12:17,400
in order to find
the keyboard,

298
00:12:17,400 --> 00:12:21,467
what if the keyboard came
and found your finger

299
00:12:21,467 --> 00:12:23,400
when you put your
finger down?

300
00:12:23,400 --> 00:12:26,100
So the opposite
of absolute positioning

301
00:12:26,100 --> 00:12:28,901
is relative positioning,
and that's what we've built.

302
00:12:28,901 --> 00:12:33,234
So this is what we call
a stroke dialer.

303
00:12:33,234 --> 00:12:34,801
We came up with
a very simple idea

304
00:12:34,801 --> 00:12:38,567
saying wherever you touch is
the center of the phone keypad.

305
00:12:38,567 --> 00:12:39,834
Okay?

306
00:12:39,834 --> 00:12:41,033
Put your finger there,
it's five.

307
00:12:41,033 --> 00:12:42,667
There, it's five.
That's five.

308
00:12:42,667 --> 00:12:45,000
Ah, but now you know
where five is.

309
00:12:45,000 --> 00:12:46,534
Well, if you know
where five is,

310
00:12:46,534 --> 00:12:48,501
you know where two is,
you know where one is,

311
00:12:48,501 --> 00:12:50,767
you know where nine is.

312
00:12:50,767 --> 00:12:55,200
So this very simple insight
of asking the why--

313
00:12:55,200 --> 00:12:57,501
irritating "why" question
many times

314
00:12:57,501 --> 00:12:59,200
gave us
a very simple answer.

315
00:12:59,200 --> 00:13:00,701
So the next time your
two-year-old asks why,

316
00:13:00,701 --> 00:13:02,200
don't yell at him.

317
00:13:02,200 --> 00:13:04,334
Answer the question and he'll
probably find out something.

318
00:13:04,334 --> 00:13:07,000
So I'll let Charles
do a quick demo

319
00:13:07,000 --> 00:13:08,534
of the stroke dialer.

320
00:13:08,534 --> 00:13:10,434
What is interesting
about the stroke dialer

321
00:13:10,434 --> 00:13:13,067
with respect to its feedback
is that it actually

322
00:13:13,067 --> 00:13:16,400
gives you auditory feedback
in terms of sound cues,

323
00:13:16,400 --> 00:13:20,033
it speaks the number,
and it also vibrates.

324
00:13:20,033 --> 00:13:21,834
And all of those
are synchronized

325
00:13:21,834 --> 00:13:24,934
and that's a big,
big win with respect

326
00:13:24,934 --> 00:13:26,634
to doing the
user interface correctly

327
00:13:26,634 --> 00:13:30,901
because it gives you
a whole sense of realism.

328
00:13:30,901 --> 00:13:32,901
So this is an interesting thing
about the real world, right?

329
00:13:32,901 --> 00:13:35,801
If I take a coffee cup
and put it on a table,

330
00:13:35,801 --> 00:13:40,033
it goes "click" and it gives you
force feedback on your hand.

331
00:13:40,033 --> 00:13:41,667
The table resists.

332
00:13:41,667 --> 00:13:43,901
If, for instance,
the table didn't resist,

333
00:13:43,901 --> 00:13:46,400
you would drop the cup.

334
00:13:46,400 --> 00:13:48,734
If you didn't hear the "clink"
when you put the cup down,

335
00:13:48,734 --> 00:13:50,534
you would feel something
was wrong.

336
00:13:50,534 --> 00:13:52,067
And the same applies
to building

337
00:13:52,067 --> 00:13:54,033
a touchscreen interface
where you're doing

338
00:13:54,033 --> 00:13:55,834
auditory input and touch.

339
00:13:55,834 --> 00:14:00,033
male computer voice: Nine.
One. One.

340
00:14:00,033 --> 00:14:03,267
Raman: So obviously you heard
the auditory output.

341
00:14:03,267 --> 00:14:05,367
You even heard
a little bit of vibration

342
00:14:05,367 --> 00:14:09,067
because it's
on a wooden table.

343
00:14:09,067 --> 00:14:12,467
So this is sort of
an interesting exercise

344
00:14:12,467 --> 00:14:14,667
with respect to doing
a stroke dialer.

345
00:14:14,667 --> 00:14:17,067
And later on in the talk,
Charles will actually show you

346
00:14:17,067 --> 00:14:19,801
how you can actually
use this as an overlay

347
00:14:19,801 --> 00:14:21,133
in your own applications.

348
00:14:21,133 --> 00:14:24,234
So the thought process
is nice.

349
00:14:24,234 --> 00:14:26,367
Showing you the thing
working is nice.

350
00:14:26,367 --> 00:14:28,901
But being able to plug it in
to your own applications

351
00:14:28,901 --> 00:14:31,567
is really the icing
on the cake,

352
00:14:31,567 --> 00:14:34,167
or, you know, the icing
on the Swiss chocolate

353
00:14:34,167 --> 00:14:35,767
or whatever you want
to call it.

354
00:14:35,767 --> 00:14:37,934
Let's rip to the next section
of the slide.

355
00:14:37,934 --> 00:14:39,567
At this point,
you're probably saying,

356
00:14:39,567 --> 00:14:40,834
"Yeah, yeah, big deal.

357
00:14:40,834 --> 00:14:42,300
But nobody dials
phone numbers anymore."

358
00:14:42,300 --> 00:14:43,434
It is true.

359
00:14:43,434 --> 00:14:44,701
You don't dial
phone numbers anymore.

360
00:14:44,701 --> 00:14:46,767
You use your contact manager.

361
00:14:46,767 --> 00:14:49,434
So how do you do
a contact manager

362
00:14:49,434 --> 00:14:52,634
for an eyes-free model?

363
00:14:52,634 --> 00:14:55,901
So this time you're going
to do letter input

364
00:14:55,901 --> 00:14:58,767
instead of numbers
and obviously

365
00:14:58,767 --> 00:15:00,667
you have to sort
of maintain contacts

366
00:15:00,667 --> 00:15:02,000
to all kinds of things.

367
00:15:02,000 --> 00:15:06,067
Some of the problems
we actually danced around here

368
00:15:06,067 --> 00:15:09,534
because of the way Android
works with a cloud

369
00:15:09,534 --> 00:15:11,067
and it's actually quite cool.

370
00:15:11,067 --> 00:15:13,467
Some hard problems
are best solved

371
00:15:13,467 --> 00:15:14,901
by getting rid
of the problem.

372
00:15:14,901 --> 00:15:16,734
That's what you will see
with respect

373
00:15:16,734 --> 00:15:18,067
to editing contacts.

374
00:15:18,067 --> 00:15:20,934
But let's talk
about modifying

375
00:15:20,934 --> 00:15:25,400
the stroke input idea
in order to input letters.

376
00:15:25,400 --> 00:15:30,467
Now there are many ways
of using a touchscreen

377
00:15:30,467 --> 00:15:33,501
and using your finger
to input letters, right?

378
00:15:33,501 --> 00:15:34,868
There's Graffiti.

379
00:15:34,868 --> 00:15:38,033
There's many, many versions
of Graffiti.

380
00:15:38,033 --> 00:15:42,367
All of these systems you can
actually think of as two steps.

381
00:15:42,367 --> 00:15:44,534
I'm going back
to the intention.

382
00:15:44,534 --> 00:15:46,267
You have an intent
you're communicating

383
00:15:46,267 --> 00:15:48,334
to the computer idea.

384
00:15:48,334 --> 00:15:51,167
You want to come up
with an encoding

385
00:15:51,167 --> 00:15:53,834
that is easy for the computer
to process.

386
00:15:53,834 --> 00:15:55,534
This is why Graffiti
was invented

387
00:15:55,534 --> 00:15:57,701
as opposed
to human handwriting.

388
00:15:57,701 --> 00:16:01,801
So you want a thing
that is easy,

389
00:16:01,801 --> 00:16:06,067
unambiguous to recognize
by everybody.

390
00:16:06,067 --> 00:16:08,400
And you want to come up
with a mapping

391
00:16:08,400 --> 00:16:11,234
that is easy for the human
to remember, right?

392
00:16:11,234 --> 00:16:15,067
So I could come up
with a set of strokes

393
00:16:15,067 --> 00:16:18,167
that are very easy
to recognize for the computer,

394
00:16:18,167 --> 00:16:20,400
but required extra learning.

395
00:16:20,400 --> 00:16:22,901
And, you know, early days of
the Apple Newton

396
00:16:22,901 --> 00:16:25,033
showed us that people
just give up very quickly.

397
00:16:25,033 --> 00:16:26,801
They don't learn a new system.

398
00:16:26,801 --> 00:16:30,200
So we don't claim that
what Charles and I

399
00:16:30,200 --> 00:16:34,801
are showing here is the world's
best encoding system for--

400
00:16:34,801 --> 00:16:36,701
from strokes to letters.

401
00:16:36,701 --> 00:16:39,100
But it is a system
that's worked for us.

402
00:16:39,100 --> 00:16:41,300
And it actually works
particularly well

403
00:16:41,300 --> 00:16:43,267
on the Android screen.

404
00:16:43,267 --> 00:16:44,701
So I'd like
to show you that.

405
00:16:44,701 --> 00:16:50,067
So this time, instead of
thinking of the phone keypad,

406
00:16:50,067 --> 00:16:53,634
think compass directions,
magnetic compass directions.

407
00:16:53,634 --> 00:16:57,567
So you have north and south,
east and west,

408
00:16:57,567 --> 00:17:01,133
northeast, southwest,
southeast, northwest.

409
00:17:01,133 --> 00:17:04,100
So I intentionally
said those in pairs.

410
00:17:04,100 --> 00:17:05,434
There are eight of them.

411
00:17:05,434 --> 00:17:10,000
Let's think of them
as four pairs of two each.

412
00:17:10,000 --> 00:17:12,634
Now, you know,
you sort of think about it,

413
00:17:12,634 --> 00:17:14,567
there are about 26 letters.

414
00:17:14,567 --> 00:17:16,634
You know, eight, four.

415
00:17:16,634 --> 00:17:17,968
Do the math, you know?

416
00:17:17,968 --> 00:17:21,701
Let's say we put
eight letters on each

417
00:17:21,701 --> 00:17:23,133
of these--for each
of these pairs.

418
00:17:23,133 --> 00:17:25,267
And let's sort of
think circles, okay?

419
00:17:25,267 --> 00:17:29,968
So let's think circles and since
this is a Google IO talk

420
00:17:29,968 --> 00:17:32,367
at a Google auditorium,

421
00:17:32,367 --> 00:17:35,033
let's think of it
as four colored circles.

422
00:17:35,033 --> 00:17:37,934
Like sssign the four
Google colors to them.

423
00:17:37,934 --> 00:17:42,534
Let's put letters "A"
through "H" on the first circle.

424
00:17:42,534 --> 00:17:45,067
Let's call it blue.

425
00:17:45,067 --> 00:17:48,834
Let's put the next eight letters
on the second circle.

426
00:17:48,834 --> 00:17:50,133
The next eight on the third

427
00:17:50,133 --> 00:17:52,300
and the next eight
on the fourth.

428
00:17:52,300 --> 00:17:56,167
Now we normally have eight
compass directions.

429
00:17:56,167 --> 00:17:58,067
There are four sets,
right?

430
00:17:58,067 --> 00:18:02,234
Let's use the north and south
pair to enter a circle.

431
00:18:02,234 --> 00:18:05,868
Let's use the east and west pair
to enter a different circle.

432
00:18:05,868 --> 00:18:09,534
Let's use the diagonal screen
to the outer sides.

433
00:18:09,534 --> 00:18:12,367
And the way the circle dialer
that we've done works--

434
00:18:12,367 --> 00:18:14,501
The circle keyboard,
whatever you want to call it--

435
00:18:14,501 --> 00:18:17,767
The way this guy works
is that you stroke

436
00:18:17,767 --> 00:18:20,067
in any of the eight
compass directions

437
00:18:20,067 --> 00:18:23,601
and that gets you into
one of the four circles.

438
00:18:23,601 --> 00:18:27,234
Then you trace along the circle
till you get to the letter.

439
00:18:27,234 --> 00:18:31,100
Now since we can enter each
circle in two places--

440
00:18:31,100 --> 00:18:33,901
so the north or the south
or the east or the west--

441
00:18:33,901 --> 00:18:36,834
think of it as entering either
at the top of the circle

442
00:18:36,834 --> 00:18:38,501
or the bottom
of the circle.

443
00:18:38,501 --> 00:18:40,701
This will all get obvious
as Charles

444
00:18:40,701 --> 00:18:42,033
starts showing it to you.

445
00:18:42,033 --> 00:18:43,868
So, Charles, let's show them
how we do an "A."

446
00:18:43,868 --> 00:18:46,868
So remember the first circle
has "A" through "H."

447
00:18:46,868 --> 00:18:51,000
So "A" is just an upward
diagonal stroke.

448
00:18:51,000 --> 00:18:54,767
male computer voice:
Phone book.

449
00:18:54,767 --> 00:18:56,234
female computer voice: "A."

450
00:18:56,234 --> 00:18:58,734
Raman: Now notice that it said
it in a woman's voice.

451
00:18:58,734 --> 00:19:01,267
It finalizes it when
he picks up his finger.

452
00:19:01,267 --> 00:19:02,501
male computer voice: "A."

453
00:19:02,501 --> 00:19:04,667
Aarthi Raman.

454
00:19:04,667 --> 00:19:06,567
Raman: It's also
in his contact manager,

455
00:19:06,567 --> 00:19:08,000
so it's actually
jumping to contacts

456
00:19:08,000 --> 00:19:10,133
that start with an "A,"
but we'll talk about that soon.

457
00:19:10,133 --> 00:19:13,067
So "A" was very easy to do.

458
00:19:13,067 --> 00:19:15,634
Now "A" through "H"
are on the same circle,

459
00:19:15,634 --> 00:19:18,200
so to do a "B,"
he would do an "A"...

460
00:19:18,200 --> 00:19:19,234
female computer voice: "A."

461
00:19:19,234 --> 00:19:20,267
Raman: trace along...

462
00:19:20,267 --> 00:19:21,300
female computer voice: "B."

463
00:19:21,300 --> 00:19:22,567
Raman: and pick up his finger.

464
00:19:22,567 --> 00:19:24,434
male computer voice:
No contacts found.

465
00:19:24,434 --> 00:19:26,400
Raman: See, he doesn't have any
contacts found at that letter.

466
00:19:26,400 --> 00:19:29,634
Now--So "A, B, C, D, E, F,
G, H."

467
00:19:29,634 --> 00:19:32,234
Now once you get used
to this input system,

468
00:19:32,234 --> 00:19:34,367
to do an "H,"
you obviously don't go around

469
00:19:34,367 --> 00:19:36,000
in a circle like a dork.

470
00:19:36,000 --> 00:19:37,167
You actually
go the other way around.

471
00:19:37,167 --> 00:19:39,334
So you go from "A"
to "H" in one stroke.

472
00:19:39,334 --> 00:19:41,467
female computer voice: "A, H."

473
00:19:41,467 --> 00:19:42,701
male computer voice:
No contact.

474
00:19:42,701 --> 00:19:46,434
Raman: Now supposing
you wanted to do an "E,"

475
00:19:46,434 --> 00:19:48,934
you could start at "A"
and go all the way around

476
00:19:48,934 --> 00:19:51,767
from "B" to "C" to "D"
to "E," but we don't do that,

477
00:19:51,767 --> 00:19:53,634
because remember
we have two points

478
00:19:53,634 --> 00:19:55,267
at which we can
enter the circle.

479
00:19:55,267 --> 00:19:56,868
So we enter directly at "E."

480
00:19:56,868 --> 00:19:57,868
So the downward diagonal.

481
00:19:57,868 --> 00:19:59,067
female computer voice: "E."

482
00:19:59,067 --> 00:20:00,701
male computer voice: "E."
No contacts found.

483
00:20:00,701 --> 00:20:04,334
Raman: So now you see the "A"
through "H" circle working.

484
00:20:04,334 --> 00:20:06,767
Similarly, going up
or down gets you

485
00:20:06,767 --> 00:20:09,067
into the second circle
that has "I" through "P."

486
00:20:09,067 --> 00:20:10,400
Just scroll down.

487
00:20:10,400 --> 00:20:15,167
female computer voice: "I...
J, K, L, M."

488
00:20:15,167 --> 00:20:16,334
male computer voice: "M."

489
00:20:16,334 --> 00:20:17,734
Mom cell.

490
00:20:17,734 --> 00:20:19,601
[laughter]

491
00:20:19,601 --> 00:20:23,000
Raman: So now this
is what we are using

492
00:20:23,000 --> 00:20:24,667
to filter our contact list.

493
00:20:24,667 --> 00:20:29,434
So we did the simple thing of
you do a letter

494
00:20:29,434 --> 00:20:32,501
that jumps you to the first
contact with that letter.

495
00:20:32,501 --> 00:20:33,667
You do one more letter.

496
00:20:33,667 --> 00:20:35,467
We sort of take
that as additional input

497
00:20:35,467 --> 00:20:37,467
and continue filtering.

498
00:20:37,467 --> 00:20:41,000
And so the thing
you realize with this

499
00:20:41,000 --> 00:20:42,601
is that you get
to your contacts

500
00:20:42,601 --> 00:20:44,868
in about one or two gestures.

501
00:20:44,868 --> 00:20:47,901
Each letter of the alphabet
is no more

502
00:20:47,901 --> 00:20:50,300
than three steps away,
right?

503
00:20:50,300 --> 00:20:53,434
So if you wanted to do a "C,"
you go "A, B, C."

504
00:20:53,434 --> 00:20:55,701
So that's about the longest.

505
00:20:55,701 --> 00:20:57,133
Because if you want
to do a "D,"

506
00:20:57,133 --> 00:20:58,901
you go to "E" and
go back to "D."

507
00:20:58,901 --> 00:21:01,367
So you get very good
at this very quickly.

508
00:21:01,367 --> 00:21:04,000
And the color coding sort of
helps you to learn it,

509
00:21:04,000 --> 00:21:05,801
but once you learned it,
you do it

510
00:21:05,801 --> 00:21:07,300
without looking at all.

511
00:21:07,300 --> 00:21:10,000
And the contact filter thing
is very, very nice,

512
00:21:10,000 --> 00:21:12,000
because you can really filter
through your contacts

513
00:21:12,000 --> 00:21:13,934
very rapidly with this.

514
00:21:13,934 --> 00:21:15,934
Flip to the next slide.

515
00:21:15,934 --> 00:21:19,167
So finally, the part about
the best way

516
00:21:19,167 --> 00:21:22,033
of solving some hard problems
is to get rid of them.

517
00:21:22,033 --> 00:21:24,534
How do you edit contacts?

518
00:21:24,534 --> 00:21:27,334
It's best not to edit contacts
on the phone.

519
00:21:27,334 --> 00:21:29,033
Nobody does that, right?

520
00:21:29,033 --> 00:21:30,968
What do you do particularly
if you want

521
00:21:30,968 --> 00:21:32,267
your friend's phone number?

522
00:21:32,267 --> 00:21:34,901
You say, "Could you call me so
I get it in the call log

523
00:21:34,901 --> 00:21:36,634
and I can add you there?"

524
00:21:36,634 --> 00:21:37,868
That's right.

525
00:21:37,868 --> 00:21:39,167
That's why we all do it.

526
00:21:39,167 --> 00:21:41,934
Well, because Android talks
to the cloud,

527
00:21:41,934 --> 00:21:43,534
there's an even better way
of doing it,

528
00:21:43,534 --> 00:21:45,767
which is just to use
your Gmail contact list.

529
00:21:45,767 --> 00:21:48,868
So I actually edit
all my contacts online

530
00:21:48,868 --> 00:21:50,267
and it shows up
on the phone.

531
00:21:50,267 --> 00:21:51,634
That's great.

532
00:21:51,634 --> 00:21:53,100
And if I meet people
at events like this,

533
00:21:53,100 --> 00:21:55,167
then I do the age-old
click of,

534
00:21:55,167 --> 00:21:57,767
"Oh, please give me a call and
I'll add you to the call log."

535
00:21:57,767 --> 00:21:59,901
So that's how we do contacts.

536
00:21:59,901 --> 00:22:01,200
[indistinct]

537
00:22:01,200 --> 00:22:02,601
Chen: Oh, sure.

538
00:22:02,601 --> 00:22:03,934
And actually
it's my turn now.

539
00:22:03,934 --> 00:22:05,467
Raman: Exactly.
That's why I wanted a word.

540
00:22:05,467 --> 00:22:08,334
So from here on,
we'll sort of go through

541
00:22:08,334 --> 00:22:11,634
all the technologies that we use
to implement all this.

542
00:22:11,634 --> 00:22:13,734
I'll let Charles talk
about the TTS library,

543
00:22:13,734 --> 00:22:15,934
the gesture library,
and all kinds of good stuff.

544
00:22:15,934 --> 00:22:18,901
Chen: So, hello, everyone.

545
00:22:18,901 --> 00:22:21,868
So I just have a quick question
before I start.

546
00:22:21,868 --> 00:22:25,000
How many of you saw
the keynote yesterday

547
00:22:25,000 --> 00:22:27,634
and the TTS demo?

548
00:22:27,634 --> 00:22:28,868
Awesome.

549
00:22:28,868 --> 00:22:30,400
Now how many of you here,
you know,

550
00:22:30,400 --> 00:22:32,767
are interested
in writing TTS apps

551
00:22:32,767 --> 00:22:35,167
or have written a TTS app
or, you know,

552
00:22:35,167 --> 00:22:37,701
currently working on one?

553
00:22:37,701 --> 00:22:39,434
Wow, this is fantastic.

554
00:22:39,434 --> 00:22:41,434
So I just want
to say thank you.

555
00:22:41,434 --> 00:22:43,667
You know, developer interest
is very important

556
00:22:43,667 --> 00:22:47,200
and the interest that has been
shown to the TTS library so far

557
00:22:47,200 --> 00:22:49,334
has been one of the factors
in getting TTS

558
00:22:49,334 --> 00:22:50,701
into the base platform.

559
00:22:50,701 --> 00:22:53,000
So give yourselves
a round of applause.

560
00:22:53,000 --> 00:22:57,601
[applause]

561
00:22:57,601 --> 00:23:01,934
And so with that being said,
you know, we don't--

562
00:23:01,934 --> 00:23:04,400
It's going to come in Donut,
but for right now,

563
00:23:04,400 --> 00:23:06,934
if you want to get a head start
and start working

564
00:23:06,934 --> 00:23:10,734
on talking applications,
the APIs will be very similar.

565
00:23:10,734 --> 00:23:12,567
We're actually involved
in working

566
00:23:12,567 --> 00:23:14,100
with the Android team
importing it.

567
00:23:14,100 --> 00:23:16,534
And what you're gonna get
is you're gonna get

568
00:23:16,534 --> 00:23:19,133
a head start and you can start
developing your apps

569
00:23:19,133 --> 00:23:22,000
and start playing
with this by using

570
00:23:22,000 --> 00:23:24,834
our currently released
text-to-speech library.

571
00:23:24,834 --> 00:23:26,968
And that's what
we'll be talking about

572
00:23:26,968 --> 00:23:28,801
for the rest of this session.

573
00:23:28,801 --> 00:23:30,767
Raman: So on these demos now,

574
00:23:30,767 --> 00:23:32,834
what you hear is eSpeak.

575
00:23:32,834 --> 00:23:35,601
But as developers,
go ahead and write your code.

576
00:23:35,601 --> 00:23:37,667
When Donut comes out,
you will just

577
00:23:37,667 --> 00:23:39,567
get a better voice
and all your apps

578
00:23:39,567 --> 00:23:42,000
will just sound much better.

579
00:23:42,000 --> 00:23:46,667
Chen: Okay.
So let's get started, here.

580
00:23:46,667 --> 00:23:48,667
So the TTS library.

581
00:23:48,667 --> 00:23:50,934
So this is something
that enables developers

582
00:23:50,934 --> 00:23:55,934
to create Text-To-Speech-enabled
apps that talk to users.

583
00:23:55,934 --> 00:23:57,868
The way it works
is that as a developer,

584
00:23:57,868 --> 00:24:00,100
you go into Eclipse
and you compile

585
00:24:00,100 --> 00:24:02,567
against the library stub jar

586
00:24:02,567 --> 00:24:06,100
that we've included
on our developer's site.

587
00:24:06,100 --> 00:24:09,734
And Text-To-Speech
is an Android service.

588
00:24:09,734 --> 00:24:12,067
And we have
a TTS class

589
00:24:12,067 --> 00:24:14,734
that acts as a wrapper
to take care

590
00:24:14,734 --> 00:24:16,901
of all the messy
I-Binder stuff.

591
00:24:16,901 --> 00:24:19,667
So you just create it
like a regular Java object,

592
00:24:19,667 --> 00:24:22,934
you just do a new TTS,
and you can start using it

593
00:24:22,934 --> 00:24:26,334
by doing tts.speak
and some text.

594
00:24:26,334 --> 00:24:29,901
And part of the beauty
of having this as a library

595
00:24:29,901 --> 00:24:33,934
that gets reused is that
the TTS library can be updated

596
00:24:33,934 --> 00:24:36,501
without you necessarily
having to update your app,

597
00:24:36,501 --> 00:24:38,200
and it also
enables multiple apps

598
00:24:38,200 --> 00:24:40,267
to share the same
TTS service.

599
00:24:40,267 --> 00:24:43,167
So the user doesn't have to
install it multiple times.

600
00:24:43,167 --> 00:24:48,000
And once it goes in a platform,
then everyone just gets it.

601
00:24:48,000 --> 00:24:50,234
So let's look
at some of the--

602
00:24:50,234 --> 00:24:52,534
you know, some of
the main features that we have.

603
00:24:52,534 --> 00:24:55,767
There's a very simple,
easy-to-use speak function.

604
00:24:55,767 --> 00:24:59,467
So it takes the string of text
that you want spoken,

605
00:24:59,467 --> 00:25:02,601
a queuing mode, whether you want
to speak immediately

606
00:25:02,601 --> 00:25:06,567
and flush any text that's
currently waiting to be spoken,

607
00:25:06,567 --> 00:25:09,234
or if you want to queue it up
and then some param--

608
00:25:09,234 --> 00:25:12,234
some additional parameters
that you could have.

609
00:25:12,234 --> 00:25:13,434
There's a stop call,

610
00:25:13,434 --> 00:25:15,167
because otherwise
your application

611
00:25:15,167 --> 00:25:17,033
may talk and never stop,

612
00:25:17,033 --> 00:25:19,300
which would be
kind of annoying.

613
00:25:19,300 --> 00:25:21,534
And you can also check
the current status--

614
00:25:21,534 --> 00:25:22,968
whether or not
it's currently speaking

615
00:25:22,968 --> 00:25:25,234
so if you're
trying to synchronize

616
00:25:25,234 --> 00:25:27,334
some on-screen display
you can synchronize it

617
00:25:27,334 --> 00:25:30,601
with where you are
in the speech.

618
00:25:30,601 --> 00:25:34,067
And we also have methods that
let you synthesize to a file

619
00:25:34,067 --> 00:25:35,901
so you can get an audio file
that, you know,

620
00:25:35,901 --> 00:25:38,367
you can set
as your ringtone or something.

621
00:25:38,367 --> 00:25:40,501
And, you know,
you can specify a language

622
00:25:40,501 --> 00:25:42,033
so you can
do translation apps,

623
00:25:42,033 --> 00:25:46,801
talking translators,
all that good stuff.

624
00:25:46,801 --> 00:25:49,367
And the current behavior
of the Text-To-Speech engine

625
00:25:49,367 --> 00:25:50,701
is that it will
automatically

626
00:25:50,701 --> 00:25:53,767
prompt the users
to install the TTS service.

627
00:25:53,767 --> 00:25:56,868
And if it's absent you can
set it to just fail silently

628
00:25:56,868 --> 00:25:59,000
so it won't
bother the user,

629
00:25:59,000 --> 00:26:01,834
or you can just have it
automatically redirect the user

630
00:26:01,834 --> 00:26:03,200
to Market,
where they can download

631
00:26:03,200 --> 00:26:06,000
the current TTS service.

632
00:26:06,000 --> 00:26:08,767
For more information,
and, you know,

633
00:26:08,767 --> 00:26:09,934
to check out
our source code,

634
00:26:09,934 --> 00:26:13,100
this is all open source,
free, so please take it

635
00:26:13,100 --> 00:26:16,200
and we look forward to seeing
what you can build with this.

636
00:26:16,200 --> 00:26:21,133
And you'll see the url there.
eyes-free.googlecode.com.

637
00:26:21,133 --> 00:26:22,734
And that's where you can
get all the source,

638
00:26:22,734 --> 00:26:24,767
all the jars,
everything.

639
00:26:24,767 --> 00:26:27,367
And so with that,
let's...

640
00:26:27,367 --> 00:26:29,601
I'm going to dive
into an example of this

641
00:26:29,601 --> 00:26:30,968
later in the talk.

642
00:26:30,968 --> 00:26:34,267
I'm going to talk about
the gesture library right now,

643
00:26:34,267 --> 00:26:37,434
and give a brief overview
before I start on the code--

644
00:26:37,434 --> 00:26:39,300
on the coding tutorial.

645
00:26:39,300 --> 00:26:40,601
So the gesture library--

646
00:26:40,601 --> 00:26:42,934
that's what Raman
had discussed earlier.

647
00:26:42,934 --> 00:26:46,200
You know, he had shown
the stroke dialer

648
00:26:46,200 --> 00:26:50,167
and the contacts
input method.

649
00:26:50,167 --> 00:26:53,667
And so both of those
use this gesture library

650
00:26:53,667 --> 00:26:59,601
that recognizes
very simple strokes.

651
00:27:02,267 --> 00:27:04,634
Now my Mac
is not behaving.

652
00:27:04,634 --> 00:27:06,601
There we go.
Okay.

653
00:27:06,601 --> 00:27:11,467
So this is an overlay
that watches for touch events,

654
00:27:11,467 --> 00:27:14,467
so it will tell you when a user
has touched down the screen,

655
00:27:14,467 --> 00:27:16,634
when they're moving
around on the screen,

656
00:27:16,634 --> 00:27:18,634
and when they
lift their finger up.

657
00:27:18,634 --> 00:27:21,501
So you know which position
they finished at.

658
00:27:21,501 --> 00:27:24,367
And it will tell you
the identified gestures.

659
00:27:24,367 --> 00:27:26,767
So you can actually
see the gesture

660
00:27:26,767 --> 00:27:29,067
as the user is making it,
or you can just get

661
00:27:29,067 --> 00:27:30,667
the final result
of, well,

662
00:27:30,667 --> 00:27:33,834
the user stroked
the diagonal up.

663
00:27:33,834 --> 00:27:36,467
And this exposes
the same UI

664
00:27:36,467 --> 00:27:38,901
as the stroke dialer
to the user.

665
00:27:38,901 --> 00:27:42,000
And we implemented this
as a custom View,

666
00:27:42,000 --> 00:27:43,567
and this is
a custom transparent View

667
00:27:43,567 --> 00:27:46,601
that you can layer
on top of your applications.

668
00:27:46,601 --> 00:27:48,100
And so this means that,
you know,

669
00:27:48,100 --> 00:27:50,300
you can do your UI
however you want to,

670
00:27:50,300 --> 00:27:51,767
and you can just
overlay this on top,

671
00:27:51,767 --> 00:27:57,667
and it won't have any effect
in how your view renders.

672
00:27:57,667 --> 00:27:58,968
To use this
what you have to do

673
00:27:58,968 --> 00:28:02,000
is you have to implement
a GestureListener.

674
00:28:02,000 --> 00:28:05,334
So you create a
TouchGestureControlOverlay,

675
00:28:05,334 --> 00:28:08,667
and you start with
a FrameLayout as your base View.

676
00:28:08,667 --> 00:28:11,667
So what you would normally
have as your View,

677
00:28:11,667 --> 00:28:15,000
you set that as the first child
of your FrameLayout.

678
00:28:15,000 --> 00:28:17,834
And I have an example of this
later on in the talk.

679
00:28:17,834 --> 00:28:20,534
But if you do that,
then what you'll get

680
00:28:20,534 --> 00:28:24,334
is you'll be able to layer this
TouchGestureControlOverlay

681
00:28:24,334 --> 00:28:25,934
as a child
on top of that,

682
00:28:25,934 --> 00:28:29,067
and then you can
enable or disable the gestures

683
00:28:29,067 --> 00:28:34,734
by adding or removing
that View from your FrameLayout.

684
00:28:34,734 --> 00:28:36,033
And so with that,

685
00:28:36,033 --> 00:28:38,367
let's jump into
the heart of this presentation

686
00:28:38,367 --> 00:28:42,167
and look at a tutorial
with some real code.

687
00:28:42,167 --> 00:28:47,200
And so I'm going to demonstrate
a simple music file browser.

688
00:28:47,200 --> 00:28:50,267
How many of you here
have gone to Anddev.org?

689
00:28:50,267 --> 00:28:53,634
It's a website with developers
and code examples. Cool.

690
00:28:53,634 --> 00:28:57,767
So they actually posted
a very nice FileBrowser tutorial

691
00:28:57,767 --> 00:28:59,734
when Android
first came out.

692
00:28:59,734 --> 00:29:02,133
You know, how you can
explore the SDCard system

693
00:29:02,133 --> 00:29:03,667
and look at
what's there.

694
00:29:03,667 --> 00:29:07,868
So we took that, and we show how
in just a very few lines of code

695
00:29:07,868 --> 00:29:13,000
you can add both Text-To-Speech
and gesture controls to it.

696
00:29:13,000 --> 00:29:15,567
So this is a very simple
music file browser.

697
00:29:15,567 --> 00:29:18,634
It lets you browse directories
on your SDCard

698
00:29:18,634 --> 00:29:21,501
and play MP3 files
that it finds there.

699
00:29:21,501 --> 00:29:24,567
And you play the music
by just clicking on that file.

700
00:29:24,567 --> 00:29:26,701
And the directory path
is the first entry.

701
00:29:26,701 --> 00:29:28,400
If you click
on the directory path,

702
00:29:28,400 --> 00:29:29,601
then it just
cycles through

703
00:29:29,601 --> 00:29:33,734
all the MP3s you have
in that subdirectory.

704
00:29:33,734 --> 00:29:35,801
And as you scroll
through the list,

705
00:29:35,801 --> 00:29:37,300
you get some
tactile feedback,

706
00:29:37,300 --> 00:29:41,968
so you actually feel like
you're moving through a list.

707
00:29:41,968 --> 00:29:46,901
And so now I'm going to explain
how to add spoken feedback.

708
00:29:46,901 --> 00:29:48,067
So you first start off

709
00:29:48,067 --> 00:29:51,601
by creating a TTS object
in method onCreate.

710
00:29:51,601 --> 00:29:53,701
And this will cause it
to run the Text-To-Speech

711
00:29:53,701 --> 00:29:56,167
as part of its
initialization.

712
00:29:56,167 --> 00:29:59,734
And then you can add some
application-specific logic there

713
00:29:59,734 --> 00:30:02,534
so that your application
comes up talking.

714
00:30:02,534 --> 00:30:08,467
So let me just switch over to
Eclipse and show you the code.

715
00:30:11,801 --> 00:30:16,567
Okay, so this is
the music file browser--

716
00:30:16,567 --> 00:30:20,801
the base music file browser
before we added anything to it.

717
00:30:20,801 --> 00:30:23,934
And let me actually
demonstrate that first

718
00:30:23,934 --> 00:30:28,234
before I go any further
in this talk.

719
00:30:28,234 --> 00:30:33,033
So it's the first
music file browser here.

720
00:30:33,033 --> 00:30:36,000
And you see
the contents of my SDCard.

721
00:30:36,000 --> 00:30:38,400
I can scroll
through it.

722
00:30:38,400 --> 00:30:39,968
And, you know,
nothing's talking,

723
00:30:39,968 --> 00:30:41,601
but, you know,
it works.

724
00:30:41,601 --> 00:30:43,667
I can go to MP3s.

725
00:30:43,667 --> 00:30:46,300
And, you know, I can play
a couple of popular songs.

726
00:30:46,300 --> 00:30:47,567
Like this.

727
00:30:47,567 --> 00:30:50,567
[Rick Astley's
 <i>Never Gonna Give You Up]</i>

728
00:30:50,567 --> 00:30:52,300
Okay, enough of that.

729
00:30:52,300 --> 00:30:54,200
Raman: That's popular?
Chen: [stops music]

730
00:30:54,200 --> 00:30:55,801
Chen: I-I think it is
popular on the Internet.

731
00:30:55,801 --> 00:30:57,033
At least on YouTube.

732
00:30:57,033 --> 00:30:58,601
[laughter]

733
00:30:58,601 --> 00:31:00,701
So--Okay, so let's see--

734
00:31:00,701 --> 00:31:02,634
Now let's see if we can
make this a little bit better.

735
00:31:02,634 --> 00:31:04,234
A little bit
more interesting.

736
00:31:04,234 --> 00:31:07,234
And, you know, let's see
if we can make this talk.

737
00:31:07,234 --> 00:31:09,133
So...

738
00:31:09,133 --> 00:31:11,400
Okay, I need to switch
back to my Mac, here.

739
00:31:11,400 --> 00:31:14,767
And--Okay, so what
you just saw here

740
00:31:14,767 --> 00:31:17,834
is the basic
music file browser.

741
00:31:17,834 --> 00:31:21,634
And this is just the tutorial
that was on Anddev.org

742
00:31:21,634 --> 00:31:24,968
that we modified a little bit
to handle the playing.

743
00:31:24,968 --> 00:31:28,801
So where we made
the modification is down here.

744
00:31:28,801 --> 00:31:32,200
And we added
a toggle playing function.

745
00:31:32,200 --> 00:31:35,534
So--So we did that,
and the other thing is we added

746
00:31:35,534 --> 00:31:41,534
some tactile feedback to when
you scroll through the list.

747
00:31:41,534 --> 00:31:43,834
So if you look at here
we have this--

748
00:31:43,834 --> 00:31:45,300
I'll track by that.

749
00:31:45,300 --> 00:31:46,901
Okay, how's the font size
for everyone?

750
00:31:46,901 --> 00:31:49,033
Can you guys
see it okay?

751
00:31:49,033 --> 00:31:51,934
No? Okay, let me
zoom that a little bit.

752
00:31:51,934 --> 00:31:57,868
Okay, so now we're
better on text size.

753
00:32:00,267 --> 00:32:04,400
Okay.

754
00:32:04,400 --> 00:32:10,234
So here is where we added
our vibration control to it.

755
00:32:10,234 --> 00:32:12,601
Aside from that, it's the same
basic file browser.

756
00:32:12,601 --> 00:32:17,067
So let's see,
how can we add speech to this?

757
00:32:17,067 --> 00:32:21,234
So here is the version
where we've added speech.

758
00:32:21,234 --> 00:32:23,534
And I've helpfully
set break points

759
00:32:23,534 --> 00:32:27,334
so I can find all the places
where I added some code.

760
00:32:27,334 --> 00:32:28,434
There's not
that much code,

761
00:32:28,434 --> 00:32:30,934
so the break points
are pretty useful.

762
00:32:30,934 --> 00:32:35,901
So we added a line to--
here to create a TTS object.

763
00:32:35,901 --> 00:32:37,133
Up here.

764
00:32:37,133 --> 00:32:40,133
And then we have
a TTS initialization method.

765
00:32:40,133 --> 00:32:44,667
This will get called
whenever the TTS is created.

766
00:32:44,667 --> 00:32:47,667
And so you see when we start it
we helpfully announce

767
00:32:47,667 --> 00:32:52,133
that, hey,
music file browser started.

768
00:32:52,133 --> 00:32:55,767
And then the OnCreate
method of your app.

769
00:32:55,767 --> 00:33:00,267
We have now
this TTS--new TTS.

770
00:33:00,267 --> 00:33:05,501
And we set the initialization
listener to "ttsInitListener."

771
00:33:05,501 --> 00:33:09,601
So this--this is what causes

772
00:33:09,601 --> 00:33:12,367
our Init function
up here to get called.

773
00:33:12,367 --> 00:33:15,067
And then--then it's
pretty simple, right?

774
00:33:15,067 --> 00:33:17,133
Now, you know,
earlier I'd mentioned

775
00:33:17,133 --> 00:33:19,033
we had this
vibration feedback

776
00:33:19,033 --> 00:33:21,567
for when you scroll past
certain items in a list.

777
00:33:21,567 --> 00:33:23,634
Well, so we can
actually latch

778
00:33:23,634 --> 00:33:26,667
the Text-To-Speech functionality
on top of that.

779
00:33:26,667 --> 00:33:28,834
So instead of just vibrating,
play will be vibrated

780
00:33:28,834 --> 00:33:33,100
and we spoke the directory
or the music file name.

781
00:33:33,100 --> 00:33:35,601
Well, that's what
we ended up doing.

782
00:33:35,601 --> 00:33:38,534
So if you look
down here...

783
00:33:43,968 --> 00:33:45,400
Ta-dah.

784
00:33:45,400 --> 00:33:50,234
So there we have
"tts.speak(filename.substring,"

785
00:33:50,234 --> 00:33:52,033
and we just
speak it there.

786
00:33:52,033 --> 00:33:53,367
It flushes
right away.

787
00:33:53,367 --> 00:33:54,767
And you can--

788
00:33:54,767 --> 00:33:58,634
As a result, you can hear
what you're scrolling to.

789
00:33:58,634 --> 00:34:04,634
So--so let me
demo that version.

790
00:34:06,968 --> 00:34:09,567
computerized male voice:
Music file browser started.

791
00:34:09,567 --> 00:34:11,000
Chen: So there.

792
00:34:11,000 --> 00:34:14,601
So now you'll always know
when it actually started up.

793
00:34:14,601 --> 00:34:17,133
And now I can
scroll through.

794
00:34:17,133 --> 00:34:18,868
computer voice:
Up one level.

795
00:34:18,868 --> 00:34:21,934
Raman: On your own phone
it won't talk so loudly.

796
00:34:21,934 --> 00:34:23,434
Chen: Yeah,
it only talks this loudly

797
00:34:23,434 --> 00:34:25,534
if you put it
next to a microphone.

798
00:34:25,534 --> 00:34:27,200
computer voice:
D-sim, download.

799
00:34:27,200 --> 00:34:30,734
D-sim, dow--
espeak data, MP3s.

800
00:34:30,734 --> 00:34:31,868
Chen: Okay.

801
00:34:31,868 --> 00:34:33,434
Raman: The voice you hear--
that is eSpeak,

802
00:34:33,434 --> 00:34:35,868
and as I said, this will--
this--you know, over time you'll

803
00:34:35,868 --> 00:34:38,467
have multiple voices available
to you that you can choose.

804
00:34:38,467 --> 00:34:40,033
computer voice:
Up one level.

805
00:34:40,033 --> 00:34:42,400
Portal, <i>Still Alive.mp3.</i>

806
00:34:42,400 --> 00:34:45,400
[Portal's <i>Still Alive]</i>

807
00:34:45,400 --> 00:34:47,834
[laughter]

808
00:34:47,834 --> 00:34:51,534
Chen: Okay, so cool.
Huge success, right?

809
00:34:51,534 --> 00:34:56,300
So--Okay, so let's kind of see
what that actually meant.

810
00:34:56,300 --> 00:34:58,901
So--so you saw
all the code that I added.

811
00:34:58,901 --> 00:35:01,701
Those couple of lines--
That was--that was it.

812
00:35:01,701 --> 00:35:06,367
Really, to get
TTS working.

813
00:35:06,367 --> 00:35:07,367
And see, if you--

814
00:35:07,367 --> 00:35:08,701
if you actually
go back and count--

815
00:35:08,701 --> 00:35:10,767
So all--so these slides
will be available,

816
00:35:10,767 --> 00:35:12,868
and our code
is already available

817
00:35:12,868 --> 00:35:15,534
on our Eyes-Free
Google Code project.

818
00:35:15,534 --> 00:35:19,334
So I challenge you all to go
back and download this code--

819
00:35:19,334 --> 00:35:21,467
check it out,
and actually do a diff

820
00:35:21,467 --> 00:35:23,367
and count
the number of lines.

821
00:35:23,367 --> 00:35:25,667
Because the diff--
You're gonna find

822
00:35:25,667 --> 00:35:29,133
that it's really just
13 lines of difference.

823
00:35:29,133 --> 00:35:32,467
So adding--And this includes,
you know, import statements,

824
00:35:32,467 --> 00:35:34,534
just, you know, generic,
boilerplate things, right?

825
00:35:34,534 --> 00:35:37,701
Like adding a closing brace;
that's a line.

826
00:35:37,701 --> 00:35:41,300
So it add--We only needed
to add 13 lines of code,

827
00:35:41,300 --> 00:35:44,067
and we added full Text-To-Speech
functionality

828
00:35:44,067 --> 00:35:47,601
to this
music file browser.

829
00:35:47,601 --> 00:35:49,868
So--so this is--
this is nice.

830
00:35:49,868 --> 00:35:52,100
You know, now you have
a talking music file browser,

831
00:35:52,100 --> 00:35:54,033
but what if you
wanted to use this

832
00:35:54,033 --> 00:35:56,200
while you were jogging
or something, right?

833
00:35:56,200 --> 00:35:57,868
It's not going to be
very convenient

834
00:35:57,868 --> 00:36:00,334
for you to jog
and try to use the track ball.

835
00:36:00,334 --> 00:36:03,167
That's going to be
a little bit difficult.

836
00:36:03,167 --> 00:36:04,501
It's probably
much easier

837
00:36:04,501 --> 00:36:06,934
if you could just do
some gestures on the screen;

838
00:36:06,934 --> 00:36:08,501
scroll through
what you wanted.

839
00:36:08,501 --> 00:36:09,834
So--

840
00:36:09,834 --> 00:36:11,601
Raman: You don't want
to jog with the track ball

841
00:36:11,601 --> 00:36:13,167
because the track ball
will keep jogging

842
00:36:13,167 --> 00:36:15,734
and nothing
will ever be stable.

843
00:36:15,734 --> 00:36:17,934
You really don't--
Need something else.

844
00:36:17,934 --> 00:36:20,868
Chen: Exactly.

845
00:36:20,868 --> 00:36:24,133
So--so let's add
the gesture input method

846
00:36:24,133 --> 00:36:28,067
to the music file browser.

847
00:36:28,067 --> 00:36:30,033
So as I mentioned before,

848
00:36:30,033 --> 00:36:32,534
the gesture overlay
is a transparent overlay,

849
00:36:32,534 --> 00:36:33,901
and you can just over--

850
00:36:33,901 --> 00:36:37,601
you can just put it on top
of your existing content views.

851
00:36:37,601 --> 00:36:40,234
And this won't interfere with
your visual appearance at all

852
00:36:40,234 --> 00:36:43,467
because, hey, the whole thing's
transparent, right?

853
00:36:43,467 --> 00:36:45,868
So you add this
to handle user input,

854
00:36:45,868 --> 00:36:48,767
and we're going to add
two very simple controls.

855
00:36:48,767 --> 00:36:50,834
So we're going to say
when you tap down on the screen

856
00:36:50,834 --> 00:36:53,000
that's play or pause,

857
00:36:53,000 --> 00:36:55,734
and if you want to gesture
towards the right,

858
00:36:55,734 --> 00:36:57,300
that means you want
to just cycle

859
00:36:57,300 --> 00:37:03,367
to the next track
in that directory.

860
00:37:03,367 --> 00:37:06,501
So--so this is the type of code
that you have to write.

861
00:37:06,501 --> 00:37:08,167
It's fairly simple.

862
00:37:08,167 --> 00:37:12,033
You start off
with a GestureListener.

863
00:37:12,033 --> 00:37:13,868
man: [indistinct]

864
00:37:13,868 --> 00:37:15,367
Chen: Ooh, whoa.

865
00:37:15,367 --> 00:37:18,033
Thank you.
Sorry about that.

866
00:37:18,033 --> 00:37:19,667
Okay, so yeah.

867
00:37:19,667 --> 00:37:20,934
Anyway,
you didn't miss much.

868
00:37:20,934 --> 00:37:24,634
It was basically just--
just code here.

869
00:37:24,634 --> 00:37:26,100
Thank you.

870
00:37:26,100 --> 00:37:28,267
Can we get--give this guy
a piece of chocolate too?

871
00:37:28,267 --> 00:37:29,267
[laughter]

872
00:37:29,267 --> 00:37:30,701
Raman: I got it.

873
00:37:30,701 --> 00:37:32,734
We could be like dog kennels,
handing out gifts for bugs.

874
00:37:32,734 --> 00:37:36,133
Chen: Absolutely, absolutely.
Thank you.

875
00:37:36,133 --> 00:37:40,767
Okay, so--So yes.
GestureListener.

876
00:37:40,767 --> 00:37:42,434
So we're going to do--

877
00:37:42,434 --> 00:37:44,734
We're actually doing
something very simple because

878
00:37:44,734 --> 00:37:48,033
we're just going to do tap
to play or pause.

879
00:37:48,033 --> 00:37:49,801
And we're going to do
a stroke to the right

880
00:37:49,801 --> 00:37:51,567
to cycle through
the next thing.

881
00:37:51,567 --> 00:37:53,801
In both cases,
we actually don't care so much

882
00:37:53,801 --> 00:37:56,934
what the user is doing
as they're making the changes,

883
00:37:56,934 --> 00:37:59,501
so this "onGestureChange,"
we can leave it empty.

884
00:37:59,501 --> 00:38:01,601
We don't really
have to implement it.

885
00:38:01,601 --> 00:38:04,267
And then--All we care about
is "onGestureFinish."

886
00:38:04,267 --> 00:38:06,934
So if they finish
their gesture in the center,

887
00:38:06,934 --> 00:38:08,300
then that's a tap.

888
00:38:08,300 --> 00:38:11,000
So we do the "play/pause music"
code here.

889
00:38:11,000 --> 00:38:14,567
And if we see that the gesture
is a gesture to the right,

890
00:38:14,567 --> 00:38:15,901
then, hey,
it's a stroke to the right.

891
00:38:15,901 --> 00:38:17,100
That means
we should go ahead

892
00:38:17,100 --> 00:38:20,834
and play the next track
in that directory.

893
00:38:20,834 --> 00:38:23,033
And we don't really care about
when they start the gesture.

894
00:38:23,033 --> 00:38:24,467
'Cause, you know,

895
00:38:24,467 --> 00:38:27,968
we're not doing anything
that's timing-related here.

896
00:38:27,968 --> 00:38:31,434
Now, to put this
into your app,

897
00:38:31,434 --> 00:38:33,033
What you have to do
is you should

898
00:38:33,033 --> 00:38:36,467
take your main content View,
put that inside a FrameLayout,

899
00:38:36,467 --> 00:38:38,467
and then make
your FrameLayout the main View.

900
00:38:38,467 --> 00:38:41,467
So this way you can
switch your overlay on and off

901
00:38:41,467 --> 00:38:45,000
by just adding
or removing it.

902
00:38:45,000 --> 00:38:47,901
And then to toggle it,
then, it's pretty simple

903
00:38:47,901 --> 00:38:49,534
because all
you have to do to--

904
00:38:49,534 --> 00:38:51,968
if the overlay is active
and you want to disable it,

905
00:38:51,968 --> 00:38:55,000
you just do a simple
"removeView," and it's gone.

906
00:38:55,000 --> 00:38:56,834
And then you can
touch the screen

907
00:38:56,834 --> 00:39:00,868
and interact with it
as if you didn't have gestures.

908
00:39:00,868 --> 00:39:03,767
And then if you want
to turn it back on,

909
00:39:03,767 --> 00:39:05,767
you just do "addView,"
and suddenly now

910
00:39:05,767 --> 00:39:07,868
you get this
transparent overlay on top,

911
00:39:07,868 --> 00:39:10,334
touching it becomes
gesture inputs,

912
00:39:10,334 --> 00:39:13,701
and you won't trigger anything
in the View underneath it.

913
00:39:13,701 --> 00:39:17,534
So let's look at what this--
what this code looks like, here.

914
00:39:24,567 --> 00:39:27,467
So here is
our own gesture code.

915
00:39:27,467 --> 00:39:31,200
This is what I had just shown
in the slide earlier.

916
00:39:31,200 --> 00:39:33,434
And...

917
00:39:33,434 --> 00:39:34,701
As you see,
we didn't need to worry

918
00:39:34,701 --> 00:39:36,801
about gesture changes
or gesture starts,

919
00:39:36,801 --> 00:39:40,100
we just look at how
the user ended their gesture;

920
00:39:40,100 --> 00:39:42,834
determine what they did.

921
00:39:42,834 --> 00:39:46,300
And the main change
that we had to do was over here.

922
00:39:46,300 --> 00:39:49,968
So over here, notice how now
I've created a myFrame object.

923
00:39:49,968 --> 00:39:51,968
That's a new FrameLayout.

924
00:39:51,968 --> 00:39:54,367
I'm adding the "myList,"
which is the content view,

925
00:39:54,367 --> 00:39:56,067
to that FrameLayout,

926
00:39:56,067 --> 00:39:58,734
and then I'm making
this gesture overlay--

927
00:39:58,734 --> 00:40:00,334
Which I'm currently
not putting it in yet,

928
00:40:00,334 --> 00:40:03,667
because I didn't want
to start off in that mode.

929
00:40:03,667 --> 00:40:06,667
And then I set
my content view for my app

930
00:40:06,667 --> 00:40:08,601
as the FrameLayout.

931
00:40:08,601 --> 00:40:14,534
So--And so then the FrameLayout
manages everything else.

932
00:40:17,400 --> 00:40:20,200
And finally I had to add
an "onKeyDown" event

933
00:40:20,200 --> 00:40:21,501
because, you know,

934
00:40:21,501 --> 00:40:24,100
sometimes you do want
to switch between the two modes.

935
00:40:24,100 --> 00:40:26,334
You might not always
want to be in gesture mode.

936
00:40:26,334 --> 00:40:29,300
For example, it might be nice to
be able to just click down

937
00:40:29,300 --> 00:40:31,501
on a directory
to drill down into it.

938
00:40:31,501 --> 00:40:32,601
In that case
you don't really

939
00:40:32,601 --> 00:40:34,467
want that to get
treated as a tap,

940
00:40:34,467 --> 00:40:38,267
so to switch back and forth,
I'm using the "Menu" key.

941
00:40:38,267 --> 00:40:42,133
And using a Menu key
you swap it on, swap it off.

942
00:40:42,133 --> 00:40:46,267
So--so let's look
at this final version, here.

943
00:40:46,267 --> 00:40:48,934
And this time
I'll remember to switch.

944
00:40:48,934 --> 00:40:50,501
Yay.

945
00:40:50,501 --> 00:40:53,467
All right.

946
00:40:53,467 --> 00:40:55,868
Go back
to the home screen.

947
00:40:55,868 --> 00:40:58,367
computer voice:
Music file browser started.

948
00:40:58,367 --> 00:41:01,167
Chen: Okay, so now we have
the music file browser.

949
00:41:01,167 --> 00:41:03,000
So it started off
without gestures,

950
00:41:03,000 --> 00:41:05,267
so I can actually
just click on the screen.

951
00:41:05,267 --> 00:41:06,634
I click this.

952
00:41:06,634 --> 00:41:08,133
So that worked.

953
00:41:08,133 --> 00:41:12,133
Now let's say I want to just
start playing using gestures.

954
00:41:12,133 --> 00:41:15,601
And I don't want to care
where I'm tapping.

955
00:41:15,601 --> 00:41:17,501
computer voice:
Gestures activated.

956
00:41:17,501 --> 00:41:18,534
Chen: Gestures activated.

957
00:41:18,534 --> 00:41:20,534
Okay, so let's stroke.

958
00:41:20,534 --> 00:41:23,534
[Portal <i>Still Alive]</i>

959
00:41:23,534 --> 00:41:24,801
Raman: It worked.

960
00:41:24,801 --> 00:41:28,634
[Rick Astley
 <i>Never Gonna Give You Up]</i>

961
00:41:28,634 --> 00:41:32,534
[applause]

962
00:41:32,534 --> 00:41:35,434
Chen: Thank you,
thank you.

963
00:41:35,434 --> 00:41:39,067
So now, if you look at what--
what that actually amounted to,

964
00:41:39,067 --> 00:41:43,534
again I challenge you to go back
and do a diff and verify this,

965
00:41:43,534 --> 00:41:47,234
but when we did this,
we added about 40 lines of code.

966
00:41:47,234 --> 00:41:48,634
And that was it.

967
00:41:48,634 --> 00:41:51,367
So adding 40 lines of code,
you get this gesture thing,

968
00:41:51,367 --> 00:41:53,934
and it just
works for you.

969
00:41:53,934 --> 00:41:55,534
And so with that,

970
00:41:55,534 --> 00:41:58,567
I will hand it back to Raman
for the conclusion.

971
00:41:58,567 --> 00:42:00,067
Raman:
Okay, thanks, Charles.

972
00:42:00,067 --> 00:42:02,868
So as Charles said earlier,
all these libraries

973
00:42:02,868 --> 00:42:05,634
are open source as part
of the Eyes-Free project.

974
00:42:05,634 --> 00:42:06,968
Feel free to use it.

975
00:42:06,968 --> 00:42:10,701
Even better, feel free
to contribute patches.

976
00:42:10,701 --> 00:42:13,501
Contributions,
innovations.

977
00:42:13,501 --> 00:42:17,934
In conclusion, I believe
user interaction research

978
00:42:17,934 --> 00:42:19,934
in the mobile space--

979
00:42:19,934 --> 00:42:25,400
especially for devices that can
see, hear, and sense the world--

980
00:42:25,400 --> 00:42:29,667
is a very, very exciting area
of research that's opening up.

981
00:42:29,667 --> 00:42:33,133
The mistake we shouldn't make
is to try and take

982
00:42:33,133 --> 00:42:35,167
the 30-year old GUI
from the PC

983
00:42:35,167 --> 00:42:36,834
and push it
into the mobile device.

984
00:42:36,834 --> 00:42:41,634
I think that would be
a disservice to all of us.

985
00:42:41,634 --> 00:42:44,167
I think these
devices can be--

986
00:42:44,167 --> 00:42:47,400
do much better
at sensing our intent

987
00:42:47,400 --> 00:42:50,267
based on what they sense
of the world,

988
00:42:50,267 --> 00:42:52,100
what they sense
of our actions,

989
00:42:52,100 --> 00:42:54,367
what they sense
of our history of actions.

990
00:42:54,367 --> 00:42:59,734
And they also have many, many
ways of grabbing our attention.

991
00:42:59,734 --> 00:43:01,234
From the type
of work I do,

992
00:43:01,234 --> 00:43:04,100
speech output
being my primary--

993
00:43:04,100 --> 00:43:07,734
sort of the biggest thing that
I am interested in and work on.

994
00:43:07,734 --> 00:43:10,868
Voice on Android, as you heard
yesterday during the keynote,

995
00:43:10,868 --> 00:43:13,868
voice output is going to
get a lot, lot better

996
00:43:13,868 --> 00:43:17,634
thanks to our friends
from Zurich.

997
00:43:17,634 --> 00:43:22,300
So in conclusion I think there's
a lot more stuff to build here.

998
00:43:22,300 --> 00:43:24,734
All of you even have
the phones to build them on,

999
00:43:24,734 --> 00:43:27,767
so come hack with us,
and let's have a great time.

1000
00:43:27,767 --> 00:43:29,400
And at the end
of the day,

1001
00:43:29,400 --> 00:43:33,534
let's build technologies
and user interfaces

1002
00:43:33,534 --> 00:43:37,701
that bend those devices that you
have in your hand to your will,

1003
00:43:37,701 --> 00:43:39,467
as opposed to you
having changed--

1004
00:43:39,467 --> 00:43:43,868
having to change how you work
and play to match those devices.

1005
00:43:43,868 --> 00:43:46,300
Let's flip
to my final slide,

1006
00:43:46,300 --> 00:43:50,634
which is my usual Q and A slide
that's my dog flying a 767.

1007
00:43:50,634 --> 00:43:52,601
So if that's possible,
anything's possible.

1008
00:43:52,601 --> 00:43:55,634
[laughter]

1009
00:43:55,634 --> 00:43:57,200
Chen: So yeah.

1010
00:43:57,200 --> 00:43:59,834
So now we're gonna
take questions.

1011
00:43:59,834 --> 00:44:03,133
So please don't be shy.
We don't bite.

1012
00:44:03,133 --> 00:44:04,467
Raman: We only
bite chocolate.

1013
00:44:04,467 --> 00:44:08,300
Chen: Yes.

1014
00:44:08,300 --> 00:44:10,000
man: I have two questions.

1015
00:44:10,000 --> 00:44:11,133
Chen: Sure.

1016
00:44:11,133 --> 00:44:12,901
man: Is it easy
for a handset vendor

1017
00:44:12,901 --> 00:44:14,567
to change the voice?

1018
00:44:14,567 --> 00:44:16,701
I think the voice
is pretty...

1019
00:44:16,701 --> 00:44:20,033
Chen: So--so that's
going to be a Donut question

1020
00:44:20,033 --> 00:44:23,267
because that's going to ship
with the Donut platform.

1021
00:44:23,267 --> 00:44:25,868
And what I would like to point
out there is for right now,

1022
00:44:25,868 --> 00:44:27,200
the Text-To-Speech library--

1023
00:44:27,200 --> 00:44:30,067
it's just a library
that you can get off-market.

1024
00:44:30,067 --> 00:44:32,801
So you can get
any TTS you want off there.

1025
00:44:32,801 --> 00:44:35,534
And we do want to make it
a pluggable TTS architecture

1026
00:44:35,534 --> 00:44:38,067
So you could use
our default TTS voice,

1027
00:44:38,067 --> 00:44:42,067
or you can use some other
TTS voice that you prefer.

1028
00:44:42,067 --> 00:44:44,167
But our default will sound
pretty darn good.

1029
00:44:44,167 --> 00:44:46,234
man: Okay, and the second
question is

1030
00:44:46,234 --> 00:44:48,067
is there any
global settings menu

1031
00:44:48,067 --> 00:44:51,834
that application vendor
can check the settings value

1032
00:44:51,834 --> 00:44:55,334
and ultimately enable
these kind of features?

1033
00:44:55,334 --> 00:44:58,634
Chen: So I think you're
a little bit confused, sir,

1034
00:44:58,634 --> 00:45:00,300
about enabling
this feature.

1035
00:45:00,300 --> 00:45:03,167
Because the way it works
is this is an API.

1036
00:45:03,167 --> 00:45:05,868
So this is going to be
just like, you know,

1037
00:45:05,868 --> 00:45:09,000
using the accelerometer on the
device or something like that.

1038
00:45:09,000 --> 00:45:10,467
The user doesn't
have to explicitly

1039
00:45:10,467 --> 00:45:12,534
turn on the accelerometer,
it's just there.

1040
00:45:12,534 --> 00:45:18,434
You just code to it, you write
a function call and it works.

1041
00:45:18,434 --> 00:45:20,601
Yes.

1042
00:45:20,601 --> 00:45:22,434
man: How would you inform
the user

1043
00:45:22,434 --> 00:45:23,767
of this functionality,

1044
00:45:23,767 --> 00:45:25,901
especially the gesture
functionality as being there,

1045
00:45:25,901 --> 00:45:27,701
in a consistent way?

1046
00:45:27,701 --> 00:45:29,634
Raman: That's--
that's a good question.

1047
00:45:29,634 --> 00:45:31,734
You're asking the question
of discoverability,

1048
00:45:31,734 --> 00:45:34,868
and that question
is, in general,

1049
00:45:34,868 --> 00:45:36,601
one of the hardest
in the mobile platform.

1050
00:45:36,601 --> 00:45:41,567
So all of you holding those
Dream G1 V2 devices,

1051
00:45:41,567 --> 00:45:44,400
do you know that holding down
the "Home" key--

1052
00:45:44,400 --> 00:45:47,300
a long press on the "Home" key
brings up a list of six--

1053
00:45:47,300 --> 00:45:48,968
the last six used
applications?

1054
00:45:48,968 --> 00:45:50,634
I discovered
that today,

1055
00:45:50,634 --> 00:45:52,467
nine months
after having a phone.

1056
00:45:52,467 --> 00:45:53,901
[laughter]

1057
00:45:53,901 --> 00:45:58,067
So you ask a good question.
Do I have an answer to that? No.

1058
00:45:58,067 --> 00:46:01,634
I believe, though,
that over time we need to--

1059
00:46:01,634 --> 00:46:04,701
we will come up with gestures
that are sufficiently intuitive

1060
00:46:04,701 --> 00:46:06,334
that people use it.

1061
00:46:06,334 --> 00:46:08,033
There will be
some learning involved,

1062
00:46:08,033 --> 00:46:10,234
there will be some
word of mouth involved.

1063
00:46:10,234 --> 00:46:11,234
You know.

1064
00:46:11,234 --> 00:46:12,601
And if it is
really useful,

1065
00:46:12,601 --> 00:46:14,901
people will over time
discover it and learn it.

1066
00:46:14,901 --> 00:46:17,000
That's the best
answer I have.

1067
00:46:17,000 --> 00:46:22,234
I don't believe the PC desktop
GUI answer to this is--

1068
00:46:22,234 --> 00:46:23,367
which was, you know,

1069
00:46:23,367 --> 00:46:25,100
"everything shall be
made discoverable

1070
00:46:25,100 --> 00:46:26,434
by cluttering the screen"

1071
00:46:26,434 --> 00:46:29,667
is going to work, unfortunately,
in the mobile space.

1072
00:46:29,667 --> 00:46:30,968
So if you're--

1073
00:46:30,968 --> 00:46:32,501
That's a good
research question to answer.

1074
00:46:32,501 --> 00:46:34,267
We don't have
an answer to that.

1075
00:46:34,267 --> 00:46:36,167
Chen: Yes, Clayden.

1076
00:46:36,167 --> 00:46:39,501
Clayden: Where do things stand
with rooting synthesized speech

1077
00:46:39,501 --> 00:46:41,300
out over the--
a phone call?

1078
00:46:41,300 --> 00:46:43,634
Is that now possible?

1079
00:46:43,634 --> 00:46:47,534
Raman: Routing synthesized
speech out over a phone call.

1080
00:46:47,534 --> 00:46:49,234
I do not believe--

1081
00:46:49,234 --> 00:46:51,501
I do not believe I know
the answer to that yet.

1082
00:46:51,501 --> 00:46:53,434
I could check
on that for you.

1083
00:46:53,434 --> 00:46:55,901
Clayden: Okay, thanks.

1084
00:46:55,901 --> 00:46:57,834
Chen: Yes.

1085
00:46:57,834 --> 00:47:02,701
woman: Hi. Are you also
working on Speech-To-Text?

1086
00:47:02,701 --> 00:47:04,300
Like, is it possible
to input speech?

1087
00:47:04,300 --> 00:47:05,734
Chen: So currently
in Cupcake

1088
00:47:05,734 --> 00:47:09,033
there is a reco API
that you could use.

1089
00:47:09,033 --> 00:47:10,634
Raman: There's a reco API.

1090
00:47:10,634 --> 00:47:14,234
You can--Over time you'll also
be able to use an IME

1091
00:47:14,234 --> 00:47:15,801
that is speech-input.

1092
00:47:15,801 --> 00:47:19,234
That--that work is being done
by many people at Google

1093
00:47:19,234 --> 00:47:21,534
including the people
who do Voice Search.

1094
00:47:21,534 --> 00:47:23,334
So that
is being worked on.

1095
00:47:23,334 --> 00:47:25,901
It's not typically us.

1096
00:47:25,901 --> 00:47:27,701
woman:
So that's not part of Donut.

1097
00:47:27,701 --> 00:47:28,834
Raman: Sorry?

1098
00:47:28,834 --> 00:47:30,100
woman:
Would that be part of the--

1099
00:47:30,100 --> 00:47:31,834
Raman: The Voice Search part
is part of Cupcake.

1100
00:47:31,834 --> 00:47:33,367
woman: Okay.
Chen: It's already out there.

1101
00:47:33,367 --> 00:47:38,200
woman: Okay, cool.
Thank you.

1102
00:47:38,200 --> 00:47:42,133
Chen: Anything else?

1103
00:47:42,133 --> 00:47:43,934
Okay, well, thank you all
for coming out here.

1104
00:47:43,934 --> 00:47:45,067
It was great having you.

1105
00:47:45,067 --> 00:47:46,167
Raman: And please
send us your feedback.

1106
00:47:46,167 --> 00:47:47,834
[applause]

1107
00:47:47,834 --> 00:47:50,000
Have a good day.

