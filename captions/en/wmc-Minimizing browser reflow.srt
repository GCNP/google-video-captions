1
00:00:06,868 --> 00:00:08,567
Simon: Hello,
my name is Lindsey Simon.

2
00:00:08,567 --> 00:00:11,734
I'm a developer on the User
Experience team here at Google,

3
00:00:11,734 --> 00:00:14,467
and I work on the front end
for Google App Engine.

4
00:00:14,467 --> 00:00:16,367
At Google, we care about speed.

5
00:00:16,367 --> 00:00:18,400
And one of the factors
that influences speed

6
00:00:18,400 --> 00:00:19,834
is the rendering
of your web page

7
00:00:19,834 --> 00:00:21,133
in a web browser.

8
00:00:21,133 --> 00:00:24,133
Reflow is the process
where the browser calculates

9
00:00:24,133 --> 00:00:26,467
the positions and geometries
of all the elements

10
00:00:26,467 --> 00:00:29,467
in the document tree
for visual presentation.

11
00:00:29,467 --> 00:00:31,467
Reflow can be
an expensive operation

12
00:00:31,467 --> 00:00:33,534
in a browser,
requiring CPU.

13
00:00:33,534 --> 00:00:37,000
A change deep in the DOM tree
also requires changes

14
00:00:37,000 --> 00:00:38,968
or may require changes
all the way up

15
00:00:38,968 --> 00:00:40,934
through the parents
of that element,

16
00:00:40,934 --> 00:00:42,901
as well as changes to elements
which come

17
00:00:42,901 --> 00:00:44,434
after the one you've changed.

18
00:00:44,434 --> 00:00:47,033
When the browser's performing
these calculations,

19
00:00:47,033 --> 00:00:49,634
reflow is a user-blocking
operation

20
00:00:49,634 --> 00:00:52,434
and may hurt the user experience
of your page.

21
00:00:52,434 --> 00:00:55,200
So now I want to talk about
ways in which you might decrease

22
00:00:55,200 --> 00:00:58,434
the time it takes for your
browser to perform reflows.

23
00:00:58,434 --> 00:01:02,000
One way is to minimize
unnecessary DOM depth

24
00:01:02,000 --> 00:01:03,100
in your page.

25
00:01:03,100 --> 00:01:05,334
Every level of hierarchy
that you add

26
00:01:05,334 --> 00:01:09,100
causes more time to be taken
in order to perform reflow.

27
00:01:09,100 --> 00:01:13,501
Avoid using unnecessarily
complex CSS selectors,

28
00:01:13,501 --> 00:01:15,767
descendant selectors
particularly.

29
00:01:15,767 --> 00:01:19,601
These require more CPU power in
order to do selector matching.

30
00:01:19,601 --> 00:01:23,133
In general you want to trade
smoothness for speed in your UI.

31
00:01:23,133 --> 00:01:25,968
You may want to make changes
which make your browser feel

32
00:01:25,968 --> 00:01:28,400
like a 3D game,
but sometimes it's better

33
00:01:28,400 --> 00:01:32,000
to make small changes which have
the same effect on your user.

34
00:01:32,000 --> 00:01:34,434
Continue to delight them,
but don't disappoint them.

35
00:01:34,434 --> 00:01:35,968
Stay fast.

36
00:01:35,968 --> 00:01:39,334
Minimizing browser reflow is
one way to speed up your page.

37
00:01:39,334 --> 00:01:41,467
There are many others.
That's not the whole story.

38
00:01:41,467 --> 00:01:46,400
Go to code.google.com/speed
for more.

