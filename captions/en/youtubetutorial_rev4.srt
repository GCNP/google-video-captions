1
00:00:00,434 --> 00:00:01,734
Stephanie Liu: Hi.

2
00:00:01,734 --> 00:00:03,567
In this video, I'm going
to give you a quick overview

3
00:00:03,567 --> 00:00:07,267
of what you can do
with the YouTube APIs.

4
00:00:07,267 --> 00:00:08,934
First of all, we all know
what YouTube is, right?

5
00:00:08,934 --> 00:00:11,300
Millions of videos uploaded
from all around the world

6
00:00:11,300 --> 00:00:13,567
at your fingertips.

7
00:00:13,567 --> 00:00:15,501
The YouTube APIs allow you

8
00:00:15,501 --> 00:00:17,534
to integrate YouTube
into your application.

9
00:00:17,534 --> 00:00:18,767
There are two main APIs:

10
00:00:18,767 --> 00:00:21,767
the data API,
and the player APIs.

11
00:00:21,767 --> 00:00:23,868
But before I get
into more detail,

12
00:00:23,868 --> 00:00:26,200
let's talk widgets.

13
00:00:26,200 --> 00:00:27,534
If you're looking
for a quick sprinkling

14
00:00:27,534 --> 00:00:28,968
of YouTube on your website,

15
00:00:28,968 --> 00:00:32,167
there are some pre-made widgets
for you to check out.

16
00:00:32,167 --> 00:00:33,901
The AJAX Video Bar makes it easy

17
00:00:33,901 --> 00:00:36,501
to add a dynamic block of videos
onto your site.

18
00:00:36,501 --> 00:00:38,868
All you have to do
is copy/paste some JavaScript.

19
00:00:38,868 --> 00:00:43,467
There's even a handy wizard
to help you do customizations.

20
00:00:43,467 --> 00:00:44,734
Use the Video Search Control

21
00:00:44,734 --> 00:00:48,167
to make this block of videos
more interactive.

22
00:00:52,834 --> 00:00:54,801
We also have
the custom player available.

23
00:00:54,801 --> 00:00:56,901
You can change the color
and borders to match your site,

24
00:00:56,901 --> 00:00:59,167
as well as size and format.

25
00:00:59,167 --> 00:01:00,701
To populate your custom player,

26
00:01:00,701 --> 00:01:03,133
just select
one of your own playlists.

27
00:01:03,133 --> 00:01:04,534
Now, if you decide
you want to do something

28
00:01:04,534 --> 00:01:06,634
that's more complex
than what these widgets offer,

29
00:01:06,634 --> 00:01:07,901
then you'll wanna use the APIs,

30
00:01:07,901 --> 00:01:10,434
so let's get
into a bit more detail there.

31
00:01:10,434 --> 00:01:12,067
The data API is a RESTful API

32
00:01:12,067 --> 00:01:14,667
that allows you to do
a wide breadth of operations.

33
00:01:14,667 --> 00:01:16,667
Searching, pulling back
user information,

34
00:01:16,667 --> 00:01:18,100
uploading videos,

35
00:01:18,100 --> 00:01:20,000
creating playlists,
and much more.

36
00:01:20,000 --> 00:01:22,200
I'll go over the two
most popular use cases,

37
00:01:22,200 --> 00:01:26,200
search and upload,
and show you some examples.

38
00:01:26,200 --> 00:01:27,334
First up, search.

39
00:01:27,334 --> 00:01:28,434
I'm sure you've all searched

40
00:01:28,434 --> 00:01:30,601
for your favorite video
on YouTube.com.

41
00:01:30,601 --> 00:01:32,501
Using the API,
you can send a query

42
00:01:32,501 --> 00:01:34,334
for a search term
like you would on the site,

43
00:01:34,334 --> 00:01:36,634
and retrieve a few results
in XML, which you could then

44
00:01:36,634 --> 00:01:38,701
display in your application
how you want.

45
00:01:38,701 --> 00:01:41,801
For example, TimeTube has an
innovative viewing experience.

46
00:01:41,801 --> 00:01:43,200
They take video search results

47
00:01:43,200 --> 00:01:46,267
and display them on a timeline
with weighted importance.

48
00:01:51,968 --> 00:01:53,901
In this web-based
presentation creator,

49
00:01:53,901 --> 00:01:55,601
you can search
for videos within the app,

50
00:01:55,601 --> 00:01:58,100
and then embed them
right into your presentation.

51
00:02:06,334 --> 00:02:08,167
Another big operation is upload.

52
00:02:08,167 --> 00:02:10,067
Your users can upload
their videos to YouTube

53
00:02:10,067 --> 00:02:12,767
through your application.

54
00:02:12,767 --> 00:02:16,300
For example, Animoto.com
is a slide show creation site.

55
00:02:16,300 --> 00:02:18,033
Once their users
create a slide show,

56
00:02:18,033 --> 00:02:20,267
they have an option
to export to YouTube.

57
00:02:20,267 --> 00:02:22,801
They use the API to authorize
the user to the YouTube account,

58
00:02:22,801 --> 00:02:25,100
and then send the video over.

59
00:02:28,234 --> 00:02:29,834
"Spore" is a computer game

60
00:02:29,834 --> 00:02:31,434
that lets you
create your own creatures.

61
00:02:31,434 --> 00:02:33,100
And all proud parents
want to videotape

62
00:02:33,100 --> 00:02:35,501
and share their creations,
so there's a "record" button

63
00:02:35,501 --> 00:02:40,067
that lets you upload
straight to YouTube.

64
00:02:40,067 --> 00:02:41,167
I've only covered a small set

65
00:02:41,167 --> 00:02:42,367
of what you can do
with the data API,

66
00:02:42,367 --> 00:02:44,534
but hopefully you have
some good ideas.

67
00:02:44,534 --> 00:02:46,601
You can get started
with the data API

68
00:02:46,601 --> 00:02:48,767
with one of our open source
client libraries.

69
00:02:48,767 --> 00:02:52,400
We have them for PHP, Java,
.NET, and Python.

70
00:02:52,400 --> 00:02:53,567
They make parsing feeds

71
00:02:53,567 --> 00:02:55,467
and handling authentication
much easier.

72
00:02:55,467 --> 00:02:56,868
I should also point out

73
00:02:56,868 --> 00:02:58,601
that while we don't have
a JavaScript client library,

74
00:02:58,601 --> 00:03:01,334
we do offer JSON
as an alternative format to XML

75
00:03:01,334 --> 00:03:04,601
so you can easily
parse responses with JavaScript.

76
00:03:04,601 --> 00:03:06,300
Now, on to the player APIs.

77
00:03:06,300 --> 00:03:07,501
The player APIs give you

78
00:03:07,501 --> 00:03:09,501
control over
the YouTube-embedded player.

79
00:03:09,501 --> 00:03:13,100
You can issue commands, like
"stop," "pause," and "play";

80
00:03:13,100 --> 00:03:15,267
listen for events,
like air events--

81
00:03:15,267 --> 00:03:17,067
or which state
the player is in--

82
00:03:17,067 --> 00:03:20,234
and poll status, like how far
into the video the user is.

83
00:03:20,234 --> 00:03:21,801
Here's an example
of an application

84
00:03:21,801 --> 00:03:22,934
that's using the player APIs

85
00:03:22,934 --> 00:03:25,400
to sync up this lecture
with the slides.

86
00:03:28,067 --> 00:03:30,100
If you wanna do
even deeper customizations,

87
00:03:30,100 --> 00:03:31,434
use our chromeless player.

88
00:03:31,434 --> 00:03:33,067
It's just a video box
with no buttons

89
00:03:33,067 --> 00:03:35,033
that you can control
with the player APIs.

90
00:03:35,033 --> 00:03:36,300
You can skin the player

91
00:03:36,300 --> 00:03:38,234
to match the look and feel
of your application,

92
00:03:38,234 --> 00:03:40,701
much like in these examples.

93
00:03:44,634 --> 00:03:47,601
For even more examples,
check out our app gallery.

94
00:03:47,601 --> 00:03:50,634
And once you've built something,
show us by submitting yours.

95
00:03:50,634 --> 00:03:52,701
This has only been
a quick overview,

96
00:03:52,701 --> 00:03:54,133
but find all the rest
of the details

97
00:03:54,133 --> 00:04:00,133
on code.google.com, and ask
your questions in our forum.

