*TC 00:00:13;19
あなたに与えられたミッションは

*TC 00:00:16;27
Google Gadget の作成です

*TC 00:00:18;26
課題ガジェットはオリジナルで
利便性に富み

*TC 00:00:21;25
カスタマイズ可能であること 

*TC 00:00:23;22
私は Google Gadget チームの
Dan Le です

*TC 00:00:25;26
あなたへのミッションを指示します


*TC 00:00:28;20
Googe Gadgets は
時刻や天気、スポーツの結果を提供したり、

*TC 00:00:31;10
YouTube のフィードを呼び出せます

*TC 00:00:34;10
ガジェットはインターネットから
情報を収集し

*TC 00:00:36;17
ユーザーが使いやすい
方法で表示します

*TC 00:00:39;06
iGoogle ディレクトリでは
さまざまなガジェットを

*TC 00:00:40;22
ご紹介しています

*TC 00:00:43;11
ではガジェットを作成する方法を
見てみましょう

*TC 00:00:45;16
簡単なものから始めて
次第に複雑なものへ

*TC 00:00:47;12
進めていきましょう

*TC 00:00:50;02
このガジェットはウェブ全体から
複数の RSS や Atom フィードを

*TC 00:00:53;05
フェッチして表示するものです

*TC 00:00:55;07
複数の API 機能を使用して

*TC 00:00:57;07
高度な構成が可能です 

*TC 00:00:58;27
基本的なパラメータを選択しましょう

*TC 00:01:01;03
R&B 音楽好きなあなたは
ガジェットをカスタマイズして


*TC 00:01:04;09
YouTube、Amazon、iTunes で
最新の R&B 音楽を集めたり


*TC 00:01:07;02
お気に入りの音楽ブログから

*TC 00:01:10;27
最新の記事を引き出すことができます

*TC 00:01:13;16
各フィードには個別のタブを作成できます

*TC 00:01:16;06
まずは基本構成のみの
シンプルなガジェット XML の

*TC 00:01:18;29
作成から始めましょう

*TC 00:01:20;28
次第に複雑なガジェットを
作成できるようになります

*TC 00:01:24;13
ここにあるコードは
ガジェットのタイトルと高さを

*TC 00:01:26;09
決めるものです

*TC 00:01:30;04
さて、ガジェットにタブを
追加する必要があります

*TC 00:01:32;19
ガジェット XML に<Require feature="tabs"/>
を追加します

*TC 00:01:34;13
これで API タブ ライブラリを

*TC 00:01:37;04
使用できるようになります

*TC 00:01:39;06
コールバック関数でタブごとに

*TC 00:01:41;13
個別のコンテンツを作成します

*TC 00:01:44;07
4 つのタブを備えた基本的な
ガジェット シェルがあります

*TC 00:01:47;04
次に、各タブに RSS や Atom フィードを
取得します

*TC 00:01:51;11
ロードされる各 URL フィードに
デフォルト値を定義します

*TC 00:01:54;03
UserPrefs を追加すると
ユーザーがあなたの

*TC 00:01:57;04
ガジェットを使うときに自分の
データを構成できます

*TC 00:02:01;01
データからはフィードに関する
各種の情報を表示できます

*TC 00:02:03;28
たとえば名前や表示名、

*TC 00:02:07;01
説明、フィード エントリ、要約
などです

*TC 00:02:10;25
あなたがこのステップを完了すると、

*TC 00:02:13;11
ユーザーは入力フィードの URL を
変更できるようになります

*TC 00:02:16;26
次に、あなたのガジェット内で
フェッチを行う必要があります

*TC 00:02:20;23
「_IG_FetchFeedAsJSON」
という API メソッドが用意されています

*TC 00:02:25;19
このメソッドはフェッチを実行し

*TC 00:02:28;26
あなたが定義するコールバック関数に

*TC 00:02:31;01
「JSON」レスポンスを
返すためのものです

*TC 00:02:33;04
コールバック内では「JSON」オブジェクトを使用して

*TC 00:02:35;14
フィードを読み込みます

*TC 00:02:37;11
2 番目のパラメータは

*TC 00:02:39;16
コールバック関数を
指定する位置を定義します


*TC 00:02:41;15
3 番目のパラメータは

*TC 00:02:43;24
フェッチするエントリの数を定義します

*TC 00:02:45;09
4 番目のパラメータは各エントリ
の要約を含めるかどうかを


*TC 00:02:48;06
単純に true または false で定義します

*TC 00:02:51;26
この大きなコード スニペットは

*TC 00:02:54;16
返される「JSON」データに
基づいて HTML を生成する

*TC 00:02:56;15
コールバック関数を表示します

*TC 00:02:59;13
ガジェットの外観を見てみましょう 

*TC 00:03:02;07
これでガジェットは
あなたが設定した

*TC 00:03:05;03
基本的な機能を実行できます

*TC 00:03:07;16
ガジェットの外観やパフォーマンス
を改善するにはどうしたらいいでしょう

*TC 00:03:11;18
それにはまず、ガジェットの
UI をフォーマットする

*TC 00:03:14;07
必要があります

*TC 00:03:15;21
CSS ルールを追加すると
ガジェットの出力を

*TC 00:03:18;13
定型化することができます

*TC 00:03:19;18
ただし UI の設計に関しては
留意点があります

*TC 00:03:23;03 
ガジェットのサイズはなるべく
小さくする必要があります

*TC 00:03:25;28
iGoogle のエリアには限りがあります

*TC 00:03:28;22
ガジェットを小さくするには
単一の境界線を使用する、

*TC 00:03:31;23
余白を小さくする、
小さいフォント サイズなどの書式をタブに適用する

*TC 00:03:34;08
などの方法があります

*TC 00:03:37;25
この CSS ルールで
ガジェットの外観が

*TC 00:03:39;28
どう変わったのかを
もう一度見てみましょう

*TC 00:03:43;06
フィードからの情報量は
しばしば変化するため

*TC 00:03:45;05
必要なスペースも変化します
「Dynamic-Height」機能を使うと

*TC 00:03:48;15
必要なスペースの変化に
対処することができます

*TC 00:03:52;08
この機能はガジェットのサイズを
自動的に調整するため

*TC 00:03:54;08
フィードからの情報量に合わせて


*TC 00:03:57;03
スペースを最適化できるのです

*TC 00:03:59;07
これにより
ガジェットがスペースを余分に

*TC 00:04:01;05
使用するのを防げます

*TC 00:04:04;00
解析機能も追加できます

*TC 00:04:07;05
「_IG_Analytics」を
呼び出すだけです

*TC 00:04:09;17
必要なのは無償で利用できる

*TC 00:04:11;25
Google Analytics アカウントだけです

*TC 00:04:13;20
最初のパラメータとして
Google Analytics ID を渡します


*TC 00:04:17;14
2 番目のパラメータでは
ガジェット固有の

*TC 00:04:20;20
一意のパスを識別します

*TC 00:04:22;14
この機能は、ページのヒット数を
あなたのアカウントに報告します

*TC 00:04:25;05
また、ガジェットから派生したヒット数も

*TC 00:04:27;07
知ることができます

*TC 00:04:28;10
さあ、ガジェットに
最後の仕上げをしましょう

*TC 00:04:31;12
ガジェットは、カスタマイズできる部分が
多いほど好ましいです

*TC 00:04:34;10
追加するものを決めるときは
このガジェットを自分で使用するときに、

*TC 00:04:37;09
どんな機能がほしいかを考えてみてください

*TC 00:04:40;23
たとえば、表示するタイトルや
タブ ラベル、フィード エントリの数を変更する


*TC 00:04:43;12
機能が必要かもしれません

*TC 00:04:48;13
これは、ガジェットやタブのタイトルを
カスタマイズ可能にするのに

*TC 00:04:51;12
必要なものを表示する
コード スニペットです

*TC 00:04:57;10
最後に追加する
カスタマイズ可能な機能は

*TC 00:05:00;05
ガジェットが受け入れる
フィード エントリの数を


*TC 00:05:02;24
ユーザーが指定できるようにするものです

*TC 00:05:04;05
先に、このコードで
フィード エントリ数を

*TC 00:05:06;12
3 と指定しました

*TC 00:05:08;02
また、フィードに対するドロップ
ダウン メニューも定義できます

*TC 00:05:11;26
ハードコーディングされた
エントリ数をこのユーザー設定で

*TC 00:05:15;02
置き換えます

*TC 00:05:17;05
ガジェットの作成が完了しました

*TC 00:05:19;09
最後のステップはガジェットを
実際に動作させることです

*TC 00:05:22;06
ガジェットをディレクトリに置くには


*TC 00:05:24;20
ガジェットを iGoogle に送信してください

*TC 00:05:26;25
このガジェットを送信するには

*TC 00:05:29;17
ガジェットに関するメタデータを
追加する必要があります

*TC 00:05:32;11
この情報はあなたのガジェットが
iGoogle ディレクトリ内で

*TC 00:05:34;22
検索されやすくするためのものです

*TC 00:05:37;27
ユーザーはガジェット ディレクトリの

*TC 00:05:41;02
何千ものガジェットの中から選択します

*TC 00:05:43;05
閲覧するユーザーの

*TC 00:05:45;07
目を引く必要があります

*TC 00:05:46;27
いくつかの方法があります

*TC 00:05:50;00
ガジェットに面白いタイトルを
付けるのもその 1 つです

*TC 00:05:52;06
名前は簡潔で
特徴をよく表すものにしましょう

*TC 00:05:54;14
何をするガジェットなのかが

*TC 00:05:57;00
名前からすぐにわかる
ようにする必要があります

*TC 00:05:59;01
優れたサムネイルやスクリーンショットを
作るのもよいでしょう

*TC 00:06:02;04
画像は大切です

*TC 00:06:05;02
ユーザーをガジェットに惹き付ける
唯一の要素かもしれません

*TC 00:06:07;12
サムネイルは目立つようにして

*TC 00:06:09;19
ユーザーがクリックしたくなるようにしましょう

*TC 00:06:11;13
iGoogle ディレクトリに掲載されたら

*TC 00:06:14;19
ガジェットのプロモーションを始めましょう

*TC 00:06:16;22
[Google に追加] ボタンを
自分のサイトに追加できます

*TC 00:06:20;17
iGoogle のガジェット共有機能を使えば

*TC 00:06:24;02
ガジェットを友だちに送れます

*TC 00:06:26;04
ガジェット API に関する
ご質問がある場合は

*TC 00:06:29;09
公式のディスカッション
グループがありますので

*TC 00:06:31;08
ご参加ください

*TC 00:06:33;08
Google チームのメンバーが
グループを管理し

*TC 00:06:35;24
質問にお答えしています

*TC 00:06:37;17
グループには 3500 人以上の
メンバーが参加しており

*TC 00:06:41;01
大きな支援を提供しています

*TC 00:06:43;07
以上でミッションについての説明は終わりです

*TC 00:06:48;14
幸運を祈ります

*TC 00:06:58;12
早急にガジェットを送信してください

*TC 00:07:00;20
時は刻々と経過しています















