
*TC 00:00:06;27
Jeff Scudder です


*TC 00:00:09;21
Google Spreadsheets Data API
を担当していますGoogle スプレッドシートは

*TC 00:00:12;29
もう皆さんお馴染みですねリアルタイムの共同作業を可能にする

*TC 00:00:15;27
オンラインのスプレッドシート
アプリケーションです

*TC 00:00:18;15
これは Google ドキュメントの一部ですSpreadsheets API では

*TC 00:00:21;29
プログラムにより自動的に
スプレッドシート データに

*TC 00:00:24;24
アクセスし、指定した言語で
編集できます

*TC 00:00:28;13
Google は様々な言語で
クライアント ライブラリを

*TC 00:00:31;04
提供しているため
Spreadsheets API を使った

*TC 00:00:33;07
作業を容易に行えます

*TC 00:00:34;23
最近 Python ライブラリに
追加を行いました

*TC 00:00:37;26
スプレッドシートを単純な
テキスト データベースとして

*TC 00:00:40;14
容易に使用できるように
なっています

*TC 00:00:42;22
Google スプレッドシートを
単純なデータベースとして

*TC 00:00:45;13
使用することの最大のメリットは
ユーザー インターフェースから

*TC 00:00:49;09
すべてのデータを表示して変更
できる点です

*TC 00:00:52;00
またあなたのデータは
インターネットに接続された


*TC 00:00:55;16
すべてのマシンから利用できます

*TC 00:00:58;18
Google ドキュメント内の
データにもアクセスできます

*TC 00:01:00;10
さあ始めましょう

*TC 00:01:05;02
まず Python クライアント
ライブラリはオープンソースです

*TC 00:01:08;12
code.google.com/p/gdata-python-client 
でダウンロードできます

*TC 00:01:16;07
このモジュール「text db」は
Google Data クライアント ライブラリの

*TC 00:01:19;26
Google Data スプレッドシート
パッケージに入っています

*TC 00:01:24;21
スプレッドシート モジュールでは
Spreadsheets API の

*TC 00:01:28;02
すべての機能を使用できます

*TC 00:01:31;17
新しい「text db」モジュールは
これを基に構築されています

*TC 00:01:33;09
「text db」モジュールでは
特定のユース ケースを合理化 

*TC 00:01:35;25
するだけではありません
Spreadsheets API を

*TC 00:01:39;11
単純なデータベースのように
使用できるようになります

*TC 00:01:41;26
Spreadsheets API では
他にも様々なことができます

*TC 00:01:45;04
数式を使用する、
他のソースからデータを引き出す、

*TC 00:01:49;06
大量のセルを一度に更新する、
といったことが可能です 

*TC 00:01:51;24
ここでは、このモジュールで
使いやすさを加えてみましょう

*TC 00:01:55;10
テキスト「db module」
モジュールを

*TC 00:01:57;26
使用する方法の例を
見てみましょう

*TC 00:02:00;15
Google スプレッドシートを
クラウドの単純なデータベースのように

*TC 00:02:03;16
使用できるようにする
クラスを持つモジュールを

*TC 00:02:06;08
インポートすることから始めます

*TC 00:02:08;16
次に、私のメール アドレスを
入力するデモ モジュールを


*TC 00:02:11;15
インポートします
これで私のアドレスが

*TC 00:02:14;15
世界中に広まることはありません

*TC 00:02:16;20
これでクライアントを使用して新しく
Google スプレッドシートを作成できます

*TC 00:02:20;13
簡単ですねあなたは名前を付けるだけです

*TC 00:02:24;25
データベース オブジェクトは
新しいスプレッドシートを表します

*TC 00:02:28;22
これで表を作成できます

*TC 00:02:30;19
ただし先に Google ドキュメントの
ドキュメントを見てみましょう

*TC 00:02:37;01
OK、「Knights (騎士)」テーブルがあります

*TC 00:02:40;12
彼らの名前とクエスト、好きな色を
尋ねましょう

*TC 00:02:44;07
スプレッドシートに新しい
ワークシートができました

*TC 00:02:47;09
これで情報を追加する
準備が整いました

*TC 00:02:49;08
さあ、これを開いてみましょう

*TC 00:02:52;01
スプレッドシートに新しい行が
現れているのがわかります

*TC 00:02:57;28
スプレッドシートのユーザー
インターフェースを介して

*TC 00:03:01;19
情報を追加することもできます

*TC 00:03:06;04
既存のデータで作業する場合
スプレッドシートを見つけることから

*TC 00:03:09;14
始める必要があります
これにはスプレッドシートの

*TC 00:03:12;12
名前か一意のスプレッドシート
キー ID をルックアップします

*TC 00:03:19;08
同じ名前のスプレッドシートを
複数作成できるため

*TC 00:03:21;20
「getdatabases」メソッドから
リストが返されます

*TC 00:03:26;09
データ行を取り出す方法は.
いくつかあります

*TC 00:03:29;11
「getrecords」を使用して
単一の行をルックアップするか

*TC 00:03:32;26
行の範囲を要求します

*TC 00:03:35;03
3 行のデータしかないので
行は 3 つの項目を

*TC 00:03:38;18
格納しています

*TC 00:03:41;02
スプレッドシート構造を持つ
クエリ言語を使用して

*TC 00:03:43;25
特定の要件に一致する行を
検索することもできます

*TC 00:03:49;08
構造化クエリは and、or
less than、greater than

*TC 00:03:54;06
exact matches、not equals
の条件を含みます

*TC 00:03:57;22
騎士は 2 人いて
色は青が好きでした

*TC 00:04:02;02
見ておわかりのとおり
2 つの一致があります

*TC 00:04:07;03
行があれば
Google スプレッドシートの

*TC 00:04:10;17
データに変更を加えることができます

*TC 00:04:12;02
クラウドにデータを保存するときに生じる
問題の 1 つは

*TC 00:04:14;22
読み書き操作が
遅くなりがちなことです

*TC 00:04:19;02
原因は低速かつあまり当てに
ならないネットワーク接続で

*TC 00:04:22;15
データを転送していることですこの「text db」ライブラリの問題を
回避するには

*TC 00:04:26;16
PUSH メソッドを呼び出したときにのみ
オブジェクトに対する変更を

*TC 00:04:30;04
サーバーに送るようにすることです先の例では

*TC 00:04:34;20
騎士ガラハドのクエストを
入力するのを忘れました

*TC 00:04:36;26
今入れておきましょう

*TC 00:04:38;27
レコードにあるコンテンツを
見てください

*TC 00:04:43;10
この変更をサーバーへ送信し
スプレッドシートを更新したとき

*TC 00:04:46;20
クエストを確認する必要があります

*TC 00:04:50;22
ガラハドの好きな色が
間違っていたことも

*TC 00:04:52;29
わかります

*TC 00:04:54;06
データのローカル コピー外で
発生した更新の取得を

*TC 00:04:57;04
表示するため
スプレッドシートに

*TC 00:05:00;02
変更を加えます

*TC 00:05:01;25
ローカル コピーはまだ
変更されていませんが

*TC 00:05:06;04
データをプルした後
更新されたのがわかります

*TC 00:05:19;06
ここでは Google スプレッドシートを
あたかもクラウド内のデータベースであるかのように

*TC 00:05:21;25
使用するため「text db」を
利用する簡単な例を

*TC 00:05:25;06
順を追ってご紹介しました

*TC 00:05:27;06
これは Spreadsheets API を利用する

*TC 00:05:29;08
1 つの方法にすぎません

*TC 00:05:30;21
またこれは Python での例です


*TC 00:05:34;05
同様のライブラリを任意の
言語で作成できます

*TC 00:05:37;03
この例で使用したコードは
すべてオープンソースです

*TC 00:05:40;13
ですから、これらは
自由にコピーして変更できます

*TC 00:05:43;22
Spreadsheets API の
面白い利用方法を

*TC 00:05:45;26
お寄せください

*TC 00:05:48;27
Google はあなたのアイデアを
お待ちしております

*TC 00:05:50;14
Google Docs Data API 
グループをご訪問ください

*TC 00:05:54;13
http://code.google.com/intl/ja/
でも

*TC 00:05:57;29
API に関するドキュメントを
ご覧ください























