*TC 00:00:06;19
您好！我是 Austin Chau。

*TC 00:00:08;05
我是日历 Date API 团队
中的一员。

*TC 00:00:10;22
日历 Data API 是一种
用来显示您 Google 日历帐户数据

*TC 00:00:14;08
的 API。

*TC 00:00:16;08
使用该 API，您可以做很多
事情，例如自动创建事件、

*TC 00:00:18;26
自动搜索事件、
甚至自动创建

*TC 00:00:21;23
全新的日历程序。

*TC 00:00:23;12
现在，我要回顾一下
使用 JavaScript 客户端库

*TC 00:00:25;21
的基础知识。并借机向您
介绍日历 Data API。

*TC 00:00:29;02
另外，我还要展示
由我开发的、新的

*TC 00:00:31;18
互动式开发人员指南的样本。

*TC 00:00:33;29
该新的开发人员指南
可让您直接在

*TC 00:00:36;01
浏览器中使用代码。

*TC 00:00:37;06
因此它是
您初步学习如何使用客户端库的

*TC 00:00:39;16 
一个不错的学习工具。

*TC 00:00:41;07
JavaScript 客户端库
是我们向官方支持的

*TC 00:00:43;18
客户端库列表中
最新添加的客户端库，

*TC 00:00:45;19
其他支持的客户端库还有 
Java、CSharp、PHP

*TC 00:00:49;15
和 Phython。

*TC 00:00:50;26
但 JavaScript 客户端库
特别有用，

*TC 00:00:53;16
因为它可以让您
轻松地整合 HTML，

*TC 00:00:56;18
并且没有
服务方面的依赖性。

*TC 00:00:58;24
JavaScript 客户端库
还具有

*TC 00:01:00;20 
跨域通讯的
构建技术，

*TC 00:01:04;09
这意味着，使用 JavaScript 
您现在不仅可以执行再操作，

*TC 00:01:06;10
而且还可以执行写操作。

*TC 00:01:08;21
JavaScript 客户端库
的使用非常简单。

*TC 00:01:11;09 
我将向您展示设置代码
所需的几个步骤，

*TC 00:01:13;20
以便开始使用该客户端库。

*TC 00:01:16;27
第 1 步： 必须注册一个
开发人员密钥。 您可以通过访问

*TC 00:01:20;03
这个网站来完成注册。

*TC 00:01:22;20
第 2 步： 需要通过添加
开发人员密钥中的此脚本

*TC 00:01:26;01
来将客户端库加载程序
放置在

*TC 00:01:28;07
您的网站上。

*TC 00:01:30;05
第 3 步： 需要将图像
上传到

*TC 00:01:32;17
与 JavaScript 代码
相同的域。 该图像不一定

*TC 00:01:35;13
非得显示出来。 

*TC 00:01:36;09
像您现在看到的，
我将它放置在页面之外。

*TC 00:01:39;06
这是实现
跨域通讯目的

*TC 00:01:40;12
所需要的。

*TC 00:01:42;12
第 4 步： 您需要使用
加载程序来

*TC 00:01:45;04
在 JavaScript 客户端库中进行加载。

*TC 00:01:46;23
第 5 步： 现在，您需要
对回调函数进行设置，

*TC 00:01:49;14
使其在加载了该库
并准备运行时被调用。

*TC 00:01:52;02
第 6 步： 在回调函数内，
您首先需要检查

*TC 00:01:55;10
用户是否已登录。 

*TC 00:01:56;19
如果未登录，则
需要将用户重新导向

*TC 00:01:58;29
Google 帐户的登录页面。

*TC 00:02:00;26
用户通过验证后，
则会返回至

*TC 00:02:03;00
您的页面。

*TC 00:02:04;19
现在，您可以使用
JavaScript 客户端库

*TC 00:02:06;15
进行调用，以便使用
日历 Data API。

*TC 00:02:09;28
现在，让我们来
了解一下“互动式开发人员指南”。

*TC 00:02:12;09
您可以通过转至此地址
来访问该指南。

*TC 00:02:17;03
该互动式开发人员指南
看起来就像一个具有

*TC 00:02:19;03
示例代码的常规开发人员指南，
其中介绍了

*TC 00:02:21;12
使用 API 可执行的
常用案例。

*TC 00:02:24;13
但与常规开发人员指南不同的是，
现在您可以使用内置的文本编辑器

*TC 00:02:26;16
来修改源代码，
以及直接利用

*TC 00:02:29;05
浏览器来
执行代码。

*TC 00:02:31;14
这样学起来
既有趣又直观，

*TC 00:02:34;06
因为您可以立即看到
刚执行操作的结果。

*TC 00:02:37;16
现在，让我们
来看一些示例代码，

*TC 00:02:39;12
并试着执行这些代码。

*TC 00:02:40;28
现在，我们来运行此示例代码，
看看会发生什么。

*TC 00:02:44;21
刚刚执行的这段代码
检索了您所有的日历，

*TC 00:02:47;02
并将标题
列示出来。

*TC 00:02:49;25
您可以显示嵌入的 
Google 日历的版本，

*TC 00:02:52;03
以验证
这些日历是属于您的所有日历。

*TC 00:02:58;20
现在，让我们来看一下这段代码，
以了解这是如何完成的。

*TC 00:03:02;12
首先，必须创建
日历服务对象，

*TC 00:03:05;18
并指定您的应用程序名称。

*TC 00:03:09;27
然后，
必须指定要将此请求发送过去的

*TC 00:03:12;18
“feedURL”。

*TC 00:03:15;09
而且，我们使用的是
“allcalendar”供稿。

*TC 00:03:17;16
然后，必须定义
您的回调函数。

*TC 00:03:20;13
因此，在函数内，我们只是查看了
您所拥有日历的整个列表

*TC 00:03:24;17
并列出了
其标题。

*TC 00:03:27;08
我们所使用的
打印函数是

*TC 00:03:29;13 
该开发人员指南中
所提供的一种方便的

*TC 00:03:31;15
方法。

*TC 00:03:34;13
然后，还必须创建
一个回调函数

*TC 00:03:37;02
以进行“错误处理”。

*TC 00:03:39;13
现在，我们只是将
错误消息输出至

*TC 00:03:41;27
“输出”选项卡。

*TC 00:03:43;08
最后，必须将此请求
提交至服务器，

*TC 00:03:45;04
方法是
通过传递您的“feedURL”、

*TC 00:03:49;10
“callback”，以及
“error callback”

*TC 00:03:52;23
以在您的整个日历服务对象中
调用“getALLCalendarsFeed”。

*TC 00:03:55;21
现在，让我们修改一下该代码
以执行一些其他的操作。

*TC 00:03:58;04
让我们添加一些代码以
列出您日历的

*TC 00:03:59;29
时区。

*TC 00:04:01;17
使用文本编辑器
更改该代码

*TC 00:04:03;12
即可轻松地完成该操作。

*TC 00:04:07;02
现在，让我们来运行该代码。

*TC 00:04:12;22
您会发现日历的
标题和时区

*TC 00:04:15;25
都输出到了屏幕。

*TC 00:04:18;19
这样就可以了。 从日历中读取数据
是件很有趣的事，

*TC 00:04:20;29
但向日历写入
数据将更有趣。

*TC 00:04:23;14
现在，我们将来创建
您 Google 日历帐户的事件。

*TC 00:04:26;04
首先，必须再创建
一个服务对象。

*TC 00:04:29;16
现在，必须指定
一个不同的 URL

*TC 00:04:31;25
以便执行事件创建操作。

*TC 00:04:33;21
这就
是我们要使用的 URL， 

*TC 00:04:35;24
它是一个“私密/完整”URL。

*TC 00:04:38;24
现在，必须创建
一个 MDB 对象

*TC 00:04:41;06
来代表此新事件。

*TC 00:04:43;08
并且我们要
将标题设为“youtube video shoot”。

*TC 00:04:48;18
要将事件与时间关联，
则必须创建一个

*TC 00:04:50;16
“When 对象”。

*TC 00:04:51;24 
然后，必须使用
日时间片段

*TC 00:04:53;09
设置“When 对象”的
开始时间和结束时间。

*TC 00:04:56;03
这里，我们将开始时间
指定为今天的

*TC 00:04:58;23
9:00 AM。

*TC 00:05:00;16
将结束时间
指定为今天的 10:00 AM。

*TC 00:05:06;04
然后，我们将时间
设置为“When 对象”。

*TC 00:05:11;06
然后将“When 对象”
添加到事件中。

*TC 00:05:14;11
还必须指定回调函数，
以让您知道

*TC 00:05:16;13
事件创建的
时间。

*TC 00:05:19;05
另外还要指定
“错误处理方法”，以防发生

*TC 00:05:21;23
任何错误。

*TC 00:05:23;16
最后，必须通过
调用“插入事件方法”

*TC 00:05:26;06
将此请求
提交至服务器。

*TC 00:05:30;07
让我们来运行该代码。

*TC 00:05:35;09
然后让我们来看一下
此数据日历。

*TC 00:05:40;20
就是这样。

*TC 00:05:44;13
我希望您能认识到
使用 JavaScript 客户端库

*TC 00:05:46;13
能给我们带来很多便利。

*TC 00:05:48;07
该互动式开发人员指南
中还包括许多其他示例，

*TC 00:05:50;19
介绍了日历 Data API
的其他功能。

*TC 00:05:53;10
因此，我建议您可以
去看看并试着用用。

*TC 00:05:56;00
有关更多资源，可以访问
日历 Data API 的主页

*TC 00:05:58;06
“code.google.com”。

*TC 00:06:01;03
非常感谢。 祝您编码快乐！